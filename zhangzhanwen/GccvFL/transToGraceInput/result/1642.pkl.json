{
  "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642",
  "id": "1642",
  "fileList": [
    {
      "id": 0,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/183306_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        17
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "void CaculateWeekDay(int y, int m, int d);",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "int main()",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    cin >> year >> month >> day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    CaculateWeekDay(year, month, day);",
          "type": "funCall",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "}",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "void CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "{",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    {",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    }",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400 +1) % 7 ;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    switch(iWeek)",
          "type": "switchStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    {",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 0",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        cout << \"monday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 1",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        cout << \"tuesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 2",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        cout << \"wednesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 3",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        cout << \"thursday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    case 4",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        cout << \"friday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    case 5",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        cout << \"saturday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    case 6",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "        cout << \"sunday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    }",
          "type": "others",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "}",
          "type": "others",
          "lineNum": 42
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/183306_buggy.c",
          "id": 0,
          "startLine": 4,
          "endLine": 10,
          "name": "int main()"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/183306_buggy.c",
          "id": 1,
          "startLine": 11,
          "endLine": 43,
          "name": "void CaculateWeekDay(int y, int m, int d)"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "void CaculateWeekDay(int y, int m, int d);",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "int main()",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    cin >> year >> month >> day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    CaculateWeekDay(year, month, day);",
          "type": "funCall",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "}",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "void CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "{",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    {",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    }",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400 +1) % 7 ;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    switch(iWeek)",
          "type": "switchStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    {",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 0",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        cout << \"monday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 1",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        cout << \"tuesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 2",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        cout << \"wednesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 3",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        cout << \"thursday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    case 4",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        cout << \"friday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    case 5",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        cout << \"saturday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    case 6",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "        cout << \"sunday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    }",
          "type": "others",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "}",
          "type": "others",
          "lineNum": 42
        }
      ]
    },
    {
      "id": 1,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/301513_buggy.c",
      "result": [
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "errLines": [
        9
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<math.h>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int main()",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int y, m, d, Y, C, W;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d%d%d\", &Y, &m, &d);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m = m + 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        Y = Y + 1;",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    C = Y / 100;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    y = Y % 100;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    W = ((C / 4) - 2 * C + y + (y / 4 + (13 * (m + 1) / 5) + d - 1)) % 7;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    if(W < 0) W = W + 7;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    switch(W)",
          "type": "switchStatement",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    {",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    case 0",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 1",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 2",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 3",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 4",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    case 5",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    case 6",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    }",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "}",
          "type": "others",
          "lineNum": 40
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/301513_buggy.c",
          "id": 0,
          "startLine": 3,
          "endLine": 41,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<math.h>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int main()",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int y, m, d, Y, C, W;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d%d%d\", &Y, &m, &d);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m = m + 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        Y = Y + 1;",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    C = Y / 100;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    y = Y % 100;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    W = ((C / 4) - 2 * C + y + (y / 4 + (13 * (m + 1) / 5) + d - 1)) % 7;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    if(W < 0) W = W + 7;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    switch(W)",
          "type": "switchStatement",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    {",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    case 0",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 1",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 2",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 3",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 4",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    case 5",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    case 6",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    }",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "}",
          "type": "others",
          "lineNum": 40
        }
      ]
    },
    {
      "id": 2,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310327_buggy.c",
      "result": [
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0
      ],
      "errLines": [
        10
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "int CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    }",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 77;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    return iWeek;",
          "type": "ReturnStatement",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "}",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "int main()",
          "type": "Method",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "{",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    int y, m, d, w;",
          "type": "LocalVariableDeclaration",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    cin >> y >> m >> d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    w = CaculateWeekDay(y, m, d);",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    if(w == 0)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    if(w == 1)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(w == 2)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    if(w == 3)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    if(w == 4)",
          "type": "IfStatement",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    if(w == 5)",
          "type": "IfStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    if(w == 6)",
          "type": "IfStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "}",
          "type": "others",
          "lineNum": 33
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310327_buggy.c",
          "id": 0,
          "startLine": 4,
          "endLine": 13,
          "name": "int CaculateWeekDay(int y, int m, int d)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310327_buggy.c",
          "id": 1,
          "startLine": 14,
          "endLine": 34,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "int CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    }",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 77;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    return iWeek;",
          "type": "ReturnStatement",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "}",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "int main()",
          "type": "Method",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "{",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    int y, m, d, w;",
          "type": "LocalVariableDeclaration",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    cin >> y >> m >> d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    w = CaculateWeekDay(y, m, d);",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    if(w == 0)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    if(w == 1)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(w == 2)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    if(w == 3)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    if(w == 4)",
          "type": "IfStatement",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    if(w == 5)",
          "type": "IfStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    if(w == 6)",
          "type": "IfStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "}",
          "type": "others",
          "lineNum": 33
        }
      ]
    },
    {
      "id": 3,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310400_buggy.c",
      "result": [
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "errLines": [
        7
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int a, b, c;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    scanf(\"%d%d%d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(b < 3)",
          "type": "IfStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        b += 13;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        a--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    }",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    int m;",
          "type": "LocalVariableDeclaration",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    m = (c + 2 * b + 3 * (b + 1) / 5 + a + a / 4 - a / 100 + a / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(m == 1)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    else if(m == 2)",
          "type": "IfStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    else if(m == 3)",
          "type": "IfStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    else if(m == 4)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    else if(m == 5)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    else if(m == 6)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    else if(m == 7)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "}",
          "type": "others",
          "lineNum": 26
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0
        ],
        [
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310400_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 27,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int a, b, c;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    scanf(\"%d%d%d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(b < 3)",
          "type": "IfStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        b += 13;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        a--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    }",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    int m;",
          "type": "LocalVariableDeclaration",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    m = (c + 2 * b + 3 * (b + 1) / 5 + a + a / 4 - a / 100 + a / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(m == 1)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    else if(m == 2)",
          "type": "IfStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    else if(m == 3)",
          "type": "IfStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    else if(m == 4)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    else if(m == 5)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    else if(m == 6)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    else if(m == 7)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "}",
          "type": "others",
          "lineNum": 26
        }
      ]
    },
    {
      "id": 4,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310476_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        8
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include <stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int solve(int y, int m, int d)",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    {",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    }",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    switch(iWeek)",
          "type": "switchStatement",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    {",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    case 0",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    case 1",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    case 2",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 3",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 4",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 5",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 6",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    }",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "}",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "int main()",
          "type": "Method",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "{",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    scanf(\"%d %d %d\", &year, &month, &day);",
          "type": "funCall",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    solve(year, month, day);",
          "type": "funCall",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "}",
          "type": "others",
          "lineNum": 40
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310476_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 35,
          "name": "int solve(int y, int m, int d)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310476_buggy.c",
          "id": 1,
          "startLine": 36,
          "endLine": 41,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include <stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int solve(int y, int m, int d)",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    {",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    }",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    switch(iWeek)",
          "type": "switchStatement",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    {",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    case 0",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    case 1",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    case 2",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 3",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 4",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 5",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 6",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    }",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "}",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "int main()",
          "type": "Method",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "{",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    scanf(\"%d %d %d\", &year, &month, &day);",
          "type": "funCall",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    solve(year, month, day);",
          "type": "funCall",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "}",
          "type": "others",
          "lineNum": 40
        }
      ]
    },
    {
      "id": 5,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310483_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        8
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "void CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    {",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    }",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 40) % 7;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    switch(iWeek)",
          "type": "switchStatement",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    {",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    case 0",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    case 1",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    case 2",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 3",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 4",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 5",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 6",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    }",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "}",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "int main()",
          "type": "Method",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "{",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    int year = 0, month = 0, day = 0;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    char temp = '1';",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    scanf(\"%d%d%d\", &year, &month, &day);",
          "type": "funCall",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    scanf(\"%c\", &temp);",
          "type": "funCall",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    CaculateWeekDay(year, month, day);",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "}",
          "type": "others",
          "lineNum": 41
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310483_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 34,
          "name": "void CaculateWeekDay(int y, int m, int d)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310483_buggy.c",
          "id": 1,
          "startLine": 35,
          "endLine": 42,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "void CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    {",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    }",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 40) % 7;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    switch(iWeek)",
          "type": "switchStatement",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    {",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    case 0",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    case 1",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    case 2",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 3",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    case 4",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 5",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    case 6",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    }",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "}",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "int main()",
          "type": "Method",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "{",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    int year = 0, month = 0, day = 0;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    char temp = '1';",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    scanf(\"%d%d%d\", &year, &month, &day);",
          "type": "funCall",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    scanf(\"%c\", &temp);",
          "type": "funCall",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    CaculateWeekDay(year, month, day);",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "}",
          "type": "others",
          "lineNum": 41
        }
      ]
    },
    {
      "id": 6,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310545_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        11
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int x;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d%d%d\", &y, &m, &d);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(3 > m)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    x = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 10 + y / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(x == 1)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    if(x == 2)",
          "type": "IfStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    if(x == 3)",
          "type": "IfStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    if(x == 4)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    if(x == 5)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(x == 6)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    if(x == 7)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "}",
          "type": "others",
          "lineNum": 27
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310545_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 28,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int x;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d%d%d\", &y, &m, &d);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(3 > m)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    x = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 10 + y / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(x == 1)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    if(x == 2)",
          "type": "IfStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    if(x == 3)",
          "type": "IfStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    if(x == 4)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    if(x == 5)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(x == 6)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    if(x == 7)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "}",
          "type": "others",
          "lineNum": 27
        }
      ]
    },
    {
      "id": 7,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310565_buggy.c",
      "result": [
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        10
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include <bits/stdc++.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "#define ll long long",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "void F(int y, int m, int d)",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        y --;",
          "type": "LocalVariableDeclaration",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    }",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    int t = (d + 2 * m + 3 * m / 5 + y + y / 4 - y / 100 + y / 400) % 7;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    switch(t)",
          "type": "switchStatement",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    {",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    case 0",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    case 1",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    case 2",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    case 3",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    case 4",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    case 5",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "    case 6",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "    }",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "}",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "int main()",
          "type": "Method",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "{",
          "type": "others",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    while(~scanf(\"%d %d %d\", &y, &m, &d))",
          "type": "WhileStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        F(y, m, d);",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "}",
          "type": "others",
          "lineNum": 42
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310565_buggy.c",
          "id": 0,
          "startLine": 4,
          "endLine": 36,
          "name": "void F(int y, int m, int d)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310565_buggy.c",
          "id": 1,
          "startLine": 37,
          "endLine": 43,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include <bits/stdc++.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "#define ll long long",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "void F(int y, int m, int d)",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        y --;",
          "type": "LocalVariableDeclaration",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    }",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    int t = (d + 2 * m + 3 * m / 5 + y + y / 4 - y / 100 + y / 400) % 7;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    switch(t)",
          "type": "switchStatement",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    {",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    case 0",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    case 1",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    case 2",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    case 3",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    case 4",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    case 5",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "    case 6",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "    }",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "}",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "int main()",
          "type": "Method",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "{",
          "type": "others",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    while(~scanf(\"%d %d %d\", &y, &m, &d))",
          "type": "WhileStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        F(y, m, d);",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "}",
          "type": "others",
          "lineNum": 42
        }
      ]
    },
    {
      "id": 8,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310643_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        12
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int main()",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    cin >> y >> m >> d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    int sum;",
          "type": "LocalVariableDeclaration",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    sum = (d + 3 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    switch(sum)",
          "type": "switchStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    {",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    case 1",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        cout << \"monday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    case 2",
          "type": "others",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        cout << \"tuesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    case 3",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        cout << \"wednesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    case 4",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        cout << \"thursday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "    case 5",
          "type": "others",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        cout << \"friday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    case 6",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        cout << \"saturday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    case 7",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        cout << \"sunday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    }",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "}",
          "type": "others",
          "lineNum": 38
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310643_buggy.c",
          "id": 0,
          "startLine": 3,
          "endLine": 39,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int main()",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    cin >> y >> m >> d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    int sum;",
          "type": "LocalVariableDeclaration",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    sum = (d + 3 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    switch(sum)",
          "type": "switchStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    {",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    case 1",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        cout << \"monday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    case 2",
          "type": "others",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        cout << \"tuesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    case 3",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        cout << \"wednesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    case 4",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        cout << \"thursday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "    case 5",
          "type": "others",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        cout << \"friday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    case 6",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        cout << \"saturday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    case 7",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        cout << \"sunday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    }",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "}",
          "type": "others",
          "lineNum": 38
        }
      ]
    },
    {
      "id": 9,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310972_buggy.c",
      "result": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
      ],
      "errLines": [
        87,
        91,
        119,
        121
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<bits/stdc++.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int main()",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int day, week, year, month;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d%d%d\", &year, &month, &day);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    int ans = 0, w = 31 + 28 + 31 + 30 + 25;",
          "type": "StatementExpression",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    int x = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    if(year < 2003)",
          "type": "IfStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        ans += w;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        for(int i = year; i < 2003; ++i)",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        {",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "            if(i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "                ans += 366;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "            else",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "                ans += 365;",
          "type": "StatementExpression",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        }",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        if(year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        {",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "            {",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "                    x += 29;",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "                else",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            }",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        }",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        else",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        {",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "            {",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "                    x += 28;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "                else",
          "type": "others",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            }",
          "type": "others",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        }",
          "type": "others",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        ans -= x;",
          "type": "StatementExpression",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "        if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "            printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "        else if(ans % 7 == 6)",
          "type": "IfStatement",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "            printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "        else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "            printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "        else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "            printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "        else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "            printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "        else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "            printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "        else",
          "type": "others",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "            printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "    }",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "    else if(year > 2003)",
          "type": "IfStatement",
          "lineNum": 60
        },
        {
          "id": 61,
          "code": "    {",
          "type": "others",
          "lineNum": 61
        },
        {
          "id": 62,
          "code": "        for(int i = 2003; i < year; ++i)",
          "type": "StatementExpression",
          "lineNum": 62
        },
        {
          "id": 63,
          "code": "        {",
          "type": "others",
          "lineNum": 63
        },
        {
          "id": 64,
          "code": "            if(i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 64
        },
        {
          "id": 65,
          "code": "                ans += 366;",
          "type": "StatementExpression",
          "lineNum": 65
        },
        {
          "id": 66,
          "code": "            else",
          "type": "others",
          "lineNum": 66
        },
        {
          "id": 67,
          "code": "                ans += 365;",
          "type": "StatementExpression",
          "lineNum": 67
        },
        {
          "id": 68,
          "code": "        }",
          "type": "others",
          "lineNum": 68
        },
        {
          "id": 69,
          "code": "        if(year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 69
        },
        {
          "id": 70,
          "code": "        {",
          "type": "others",
          "lineNum": 70
        },
        {
          "id": 71,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 71
        },
        {
          "id": 72,
          "code": "            {",
          "type": "others",
          "lineNum": 72
        },
        {
          "id": 73,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 73
        },
        {
          "id": 74,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 74
        },
        {
          "id": 75,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 75
        },
        {
          "id": 76,
          "code": "                    x += 29;",
          "type": "StatementExpression",
          "lineNum": 76
        },
        {
          "id": 77,
          "code": "                else",
          "type": "others",
          "lineNum": 77
        },
        {
          "id": 78,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 78
        },
        {
          "id": 79,
          "code": "            }",
          "type": "others",
          "lineNum": 79
        },
        {
          "id": 80,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 80
        },
        {
          "id": 81,
          "code": "        }",
          "type": "others",
          "lineNum": 81
        },
        {
          "id": 82,
          "code": "        else",
          "type": "others",
          "lineNum": 82
        },
        {
          "id": 83,
          "code": "        {",
          "type": "others",
          "lineNum": 83
        },
        {
          "id": 84,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 84
        },
        {
          "id": 85,
          "code": "            {",
          "type": "others",
          "lineNum": 85
        },
        {
          "id": 86,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 86
        },
        {
          "id": 87,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 87
        },
        {
          "id": 88,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 88
        },
        {
          "id": 89,
          "code": "                    x += 28;",
          "type": "StatementExpression",
          "lineNum": 89
        },
        {
          "id": 90,
          "code": "                else",
          "type": "others",
          "lineNum": 90
        },
        {
          "id": 91,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 91
        },
        {
          "id": 92,
          "code": "            }",
          "type": "others",
          "lineNum": 92
        },
        {
          "id": 93,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 93
        },
        {
          "id": 94,
          "code": "        }",
          "type": "others",
          "lineNum": 94
        },
        {
          "id": 95,
          "code": "        ans += x - w;",
          "type": "StatementExpression",
          "lineNum": 95
        },
        {
          "id": 96,
          "code": "        if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 96
        },
        {
          "id": 97,
          "code": "            printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 97
        },
        {
          "id": 98,
          "code": "        else if(ans % 7 == 1)",
          "type": "IfStatement",
          "lineNum": 98
        },
        {
          "id": 99,
          "code": "            printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 99
        },
        {
          "id": 100,
          "code": "        else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 100
        },
        {
          "id": 101,
          "code": "            printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 101
        },
        {
          "id": 102,
          "code": "        else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 102
        },
        {
          "id": 103,
          "code": "            printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 103
        },
        {
          "id": 104,
          "code": "        else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 104
        },
        {
          "id": 105,
          "code": "            printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 105
        },
        {
          "id": 106,
          "code": "        else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 106
        },
        {
          "id": 107,
          "code": "            printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 107
        },
        {
          "id": 108,
          "code": "        else",
          "type": "others",
          "lineNum": 108
        },
        {
          "id": 109,
          "code": "            printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 109
        },
        {
          "id": 110,
          "code": "",
          "type": "others",
          "lineNum": 110
        },
        {
          "id": 111,
          "code": "    }",
          "type": "others",
          "lineNum": 111
        },
        {
          "id": 112,
          "code": "    else",
          "type": "others",
          "lineNum": 112
        },
        {
          "id": 113,
          "code": "    {",
          "type": "others",
          "lineNum": 113
        },
        {
          "id": 114,
          "code": "        if(month > 5)",
          "type": "IfStatement",
          "lineNum": 114
        },
        {
          "id": 115,
          "code": "        {",
          "type": "others",
          "lineNum": 115
        },
        {
          "id": 116,
          "code": "            for(int i = 5; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 116
        },
        {
          "id": 117,
          "code": "            {",
          "type": "others",
          "lineNum": 117
        },
        {
          "id": 118,
          "code": "                if(i == 5 || i == 7 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 118
        },
        {
          "id": 119,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 119
        },
        {
          "id": 120,
          "code": "                else",
          "type": "others",
          "lineNum": 120
        },
        {
          "id": 121,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 121
        },
        {
          "id": 122,
          "code": "            }",
          "type": "others",
          "lineNum": 122
        },
        {
          "id": 123,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 123
        },
        {
          "id": 124,
          "code": "            ans = x - 25;",
          "type": "StatementExpression",
          "lineNum": 124
        },
        {
          "id": 125,
          "code": "            if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 125
        },
        {
          "id": 126,
          "code": "                printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 126
        },
        {
          "id": 127,
          "code": "            else if(ans % 7 == 1)",
          "type": "IfStatement",
          "lineNum": 127
        },
        {
          "id": 128,
          "code": "                printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 128
        },
        {
          "id": 129,
          "code": "            else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 129
        },
        {
          "id": 130,
          "code": "                printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 130
        },
        {
          "id": 131,
          "code": "            else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 131
        },
        {
          "id": 132,
          "code": "                printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 132
        },
        {
          "id": 133,
          "code": "            else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 133
        },
        {
          "id": 134,
          "code": "                printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 134
        },
        {
          "id": 135,
          "code": "            else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 135
        },
        {
          "id": 136,
          "code": "                printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 136
        },
        {
          "id": 137,
          "code": "            else",
          "type": "others",
          "lineNum": 137
        },
        {
          "id": 138,
          "code": "                printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 138
        },
        {
          "id": 139,
          "code": "        }",
          "type": "others",
          "lineNum": 139
        },
        {
          "id": 140,
          "code": "        else if(month < 5)",
          "type": "IfStatement",
          "lineNum": 140
        },
        {
          "id": 141,
          "code": "        {",
          "type": "others",
          "lineNum": 141
        },
        {
          "id": 142,
          "code": "            for(int i = month; i < 5; ++i)",
          "type": "StatementExpression",
          "lineNum": 142
        },
        {
          "id": 143,
          "code": "            {",
          "type": "others",
          "lineNum": 143
        },
        {
          "id": 144,
          "code": "                if(i == 1 || i == 3)",
          "type": "IfStatement",
          "lineNum": 144
        },
        {
          "id": 145,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 145
        },
        {
          "id": 146,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 146
        },
        {
          "id": 147,
          "code": "                    x += 28;",
          "type": "StatementExpression",
          "lineNum": 147
        },
        {
          "id": 148,
          "code": "                else",
          "type": "others",
          "lineNum": 148
        },
        {
          "id": 149,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 149
        },
        {
          "id": 150,
          "code": "            }",
          "type": "others",
          "lineNum": 150
        },
        {
          "id": 151,
          "code": "            x += 25;",
          "type": "StatementExpression",
          "lineNum": 151
        },
        {
          "id": 152,
          "code": "            ans = x - day;",
          "type": "StatementExpression",
          "lineNum": 152
        },
        {
          "id": 153,
          "code": "            if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 153
        },
        {
          "id": 154,
          "code": "                printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 154
        },
        {
          "id": 155,
          "code": "            else if(ans % 7 == 6)",
          "type": "IfStatement",
          "lineNum": 155
        },
        {
          "id": 156,
          "code": "                printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 156
        },
        {
          "id": 157,
          "code": "            else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 157
        },
        {
          "id": 158,
          "code": "                printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 158
        },
        {
          "id": 159,
          "code": "            else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 159
        },
        {
          "id": 160,
          "code": "                printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 160
        },
        {
          "id": 161,
          "code": "            else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 161
        },
        {
          "id": 162,
          "code": "                printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 162
        },
        {
          "id": 163,
          "code": "            else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 163
        },
        {
          "id": 164,
          "code": "                printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 164
        },
        {
          "id": 165,
          "code": "            else",
          "type": "others",
          "lineNum": 165
        },
        {
          "id": 166,
          "code": "                printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 166
        },
        {
          "id": 167,
          "code": "        }",
          "type": "others",
          "lineNum": 167
        },
        {
          "id": 168,
          "code": "        else",
          "type": "others",
          "lineNum": 168
        },
        {
          "id": 169,
          "code": "        {",
          "type": "others",
          "lineNum": 169
        },
        {
          "id": 170,
          "code": "            if(day < 25)",
          "type": "IfStatement",
          "lineNum": 170
        },
        {
          "id": 171,
          "code": "            {",
          "type": "others",
          "lineNum": 171
        },
        {
          "id": 172,
          "code": "                ans = 25 - day;",
          "type": "StatementExpression",
          "lineNum": 172
        },
        {
          "id": 173,
          "code": "                if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 173
        },
        {
          "id": 174,
          "code": "                    printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 174
        },
        {
          "id": 175,
          "code": "                else if(ans % 7 == 6)",
          "type": "IfStatement",
          "lineNum": 175
        },
        {
          "id": 176,
          "code": "                    printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 176
        },
        {
          "id": 177,
          "code": "                else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 177
        },
        {
          "id": 178,
          "code": "                    printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 178
        },
        {
          "id": 179,
          "code": "                else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 179
        },
        {
          "id": 180,
          "code": "                    printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 180
        },
        {
          "id": 181,
          "code": "                else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 181
        },
        {
          "id": 182,
          "code": "                    printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 182
        },
        {
          "id": 183,
          "code": "                else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 183
        },
        {
          "id": 184,
          "code": "                    printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 184
        },
        {
          "id": 185,
          "code": "                else",
          "type": "others",
          "lineNum": 185
        },
        {
          "id": 186,
          "code": "                    printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 186
        },
        {
          "id": 187,
          "code": "            }",
          "type": "others",
          "lineNum": 187
        },
        {
          "id": 188,
          "code": "            else if(day > 25)",
          "type": "IfStatement",
          "lineNum": 188
        },
        {
          "id": 189,
          "code": "            {",
          "type": "others",
          "lineNum": 189
        },
        {
          "id": 190,
          "code": "                ans = day - 25;",
          "type": "StatementExpression",
          "lineNum": 190
        },
        {
          "id": 191,
          "code": "                if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 191
        },
        {
          "id": 192,
          "code": "                    printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 192
        },
        {
          "id": 193,
          "code": "                else if(ans % 7 == 1)",
          "type": "IfStatement",
          "lineNum": 193
        },
        {
          "id": 194,
          "code": "                    printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 194
        },
        {
          "id": 195,
          "code": "                else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 195
        },
        {
          "id": 196,
          "code": "                    printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 196
        },
        {
          "id": 197,
          "code": "                else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 197
        },
        {
          "id": 198,
          "code": "                    printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 198
        },
        {
          "id": 199,
          "code": "                else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 199
        },
        {
          "id": 200,
          "code": "                    printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 200
        },
        {
          "id": 201,
          "code": "                else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 201
        },
        {
          "id": 202,
          "code": "                    printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 202
        },
        {
          "id": 203,
          "code": "                else",
          "type": "others",
          "lineNum": 203
        },
        {
          "id": 204,
          "code": "                    printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 204
        },
        {
          "id": 205,
          "code": "            }",
          "type": "others",
          "lineNum": 205
        },
        {
          "id": 206,
          "code": "            else",
          "type": "others",
          "lineNum": 206
        },
        {
          "id": 207,
          "code": "                printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 207
        },
        {
          "id": 208,
          "code": "        }",
          "type": "others",
          "lineNum": 208
        },
        {
          "id": 209,
          "code": "    }",
          "type": "others",
          "lineNum": 209
        },
        {
          "id": 210,
          "code": "}",
          "type": "others",
          "lineNum": 210
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310972_buggy.c",
          "id": 0,
          "startLine": 3,
          "endLine": 211,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<bits/stdc++.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int main()",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int day, week, year, month;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d%d%d\", &year, &month, &day);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    int ans = 0, w = 31 + 28 + 31 + 30 + 25;",
          "type": "StatementExpression",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    int x = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    if(year < 2003)",
          "type": "IfStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        ans += w;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        for(int i = year; i < 2003; ++i)",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        {",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "            if(i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "                ans += 366;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "            else",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "                ans += 365;",
          "type": "StatementExpression",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        }",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        if(year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        {",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "            {",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "                    x += 29;",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "                else",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            }",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        }",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        else",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        {",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "            {",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "                    x += 28;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "                else",
          "type": "others",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            }",
          "type": "others",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        }",
          "type": "others",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        ans -= x;",
          "type": "StatementExpression",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "        if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "            printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "        else if(ans % 7 == 6)",
          "type": "IfStatement",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "            printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "        else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "            printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "        else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "            printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "        else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "            printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "        else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "            printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "        else",
          "type": "others",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "            printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "    }",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "    else if(year > 2003)",
          "type": "IfStatement",
          "lineNum": 60
        },
        {
          "id": 61,
          "code": "    {",
          "type": "others",
          "lineNum": 61
        },
        {
          "id": 62,
          "code": "        for(int i = 2003; i < year; ++i)",
          "type": "StatementExpression",
          "lineNum": 62
        },
        {
          "id": 63,
          "code": "        {",
          "type": "others",
          "lineNum": 63
        },
        {
          "id": 64,
          "code": "            if(i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 64
        },
        {
          "id": 65,
          "code": "                ans += 366;",
          "type": "StatementExpression",
          "lineNum": 65
        },
        {
          "id": 66,
          "code": "            else",
          "type": "others",
          "lineNum": 66
        },
        {
          "id": 67,
          "code": "                ans += 365;",
          "type": "StatementExpression",
          "lineNum": 67
        },
        {
          "id": 68,
          "code": "        }",
          "type": "others",
          "lineNum": 68
        },
        {
          "id": 69,
          "code": "        if(year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 69
        },
        {
          "id": 70,
          "code": "        {",
          "type": "others",
          "lineNum": 70
        },
        {
          "id": 71,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 71
        },
        {
          "id": 72,
          "code": "            {",
          "type": "others",
          "lineNum": 72
        },
        {
          "id": 73,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 73
        },
        {
          "id": 74,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 74
        },
        {
          "id": 75,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 75
        },
        {
          "id": 76,
          "code": "                    x += 29;",
          "type": "StatementExpression",
          "lineNum": 76
        },
        {
          "id": 77,
          "code": "                else",
          "type": "others",
          "lineNum": 77
        },
        {
          "id": 78,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 78
        },
        {
          "id": 79,
          "code": "            }",
          "type": "others",
          "lineNum": 79
        },
        {
          "id": 80,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 80
        },
        {
          "id": 81,
          "code": "        }",
          "type": "others",
          "lineNum": 81
        },
        {
          "id": 82,
          "code": "        else",
          "type": "others",
          "lineNum": 82
        },
        {
          "id": 83,
          "code": "        {",
          "type": "others",
          "lineNum": 83
        },
        {
          "id": 84,
          "code": "            for(int i = 1; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 84
        },
        {
          "id": 85,
          "code": "            {",
          "type": "others",
          "lineNum": 85
        },
        {
          "id": 86,
          "code": "                if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 86
        },
        {
          "id": 87,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 87
        },
        {
          "id": 88,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 88
        },
        {
          "id": 89,
          "code": "                    x += 28;",
          "type": "StatementExpression",
          "lineNum": 89
        },
        {
          "id": 90,
          "code": "                else",
          "type": "others",
          "lineNum": 90
        },
        {
          "id": 91,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 91
        },
        {
          "id": 92,
          "code": "            }",
          "type": "others",
          "lineNum": 92
        },
        {
          "id": 93,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 93
        },
        {
          "id": 94,
          "code": "        }",
          "type": "others",
          "lineNum": 94
        },
        {
          "id": 95,
          "code": "        ans += x - w;",
          "type": "StatementExpression",
          "lineNum": 95
        },
        {
          "id": 96,
          "code": "        if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 96
        },
        {
          "id": 97,
          "code": "            printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 97
        },
        {
          "id": 98,
          "code": "        else if(ans % 7 == 1)",
          "type": "IfStatement",
          "lineNum": 98
        },
        {
          "id": 99,
          "code": "            printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 99
        },
        {
          "id": 100,
          "code": "        else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 100
        },
        {
          "id": 101,
          "code": "            printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 101
        },
        {
          "id": 102,
          "code": "        else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 102
        },
        {
          "id": 103,
          "code": "            printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 103
        },
        {
          "id": 104,
          "code": "        else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 104
        },
        {
          "id": 105,
          "code": "            printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 105
        },
        {
          "id": 106,
          "code": "        else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 106
        },
        {
          "id": 107,
          "code": "            printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 107
        },
        {
          "id": 108,
          "code": "        else",
          "type": "others",
          "lineNum": 108
        },
        {
          "id": 109,
          "code": "            printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 109
        },
        {
          "id": 110,
          "code": "",
          "type": "others",
          "lineNum": 110
        },
        {
          "id": 111,
          "code": "    }",
          "type": "others",
          "lineNum": 111
        },
        {
          "id": 112,
          "code": "    else",
          "type": "others",
          "lineNum": 112
        },
        {
          "id": 113,
          "code": "    {",
          "type": "others",
          "lineNum": 113
        },
        {
          "id": 114,
          "code": "        if(month > 5)",
          "type": "IfStatement",
          "lineNum": 114
        },
        {
          "id": 115,
          "code": "        {",
          "type": "others",
          "lineNum": 115
        },
        {
          "id": 116,
          "code": "            for(int i = 5; i < month; ++i)",
          "type": "StatementExpression",
          "lineNum": 116
        },
        {
          "id": 117,
          "code": "            {",
          "type": "others",
          "lineNum": 117
        },
        {
          "id": 118,
          "code": "                if(i == 5 || i == 7 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 118
        },
        {
          "id": 119,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 119
        },
        {
          "id": 120,
          "code": "                else",
          "type": "others",
          "lineNum": 120
        },
        {
          "id": 121,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 121
        },
        {
          "id": 122,
          "code": "            }",
          "type": "others",
          "lineNum": 122
        },
        {
          "id": 123,
          "code": "            x += day;",
          "type": "StatementExpression",
          "lineNum": 123
        },
        {
          "id": 124,
          "code": "            ans = x - 25;",
          "type": "StatementExpression",
          "lineNum": 124
        },
        {
          "id": 125,
          "code": "            if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 125
        },
        {
          "id": 126,
          "code": "                printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 126
        },
        {
          "id": 127,
          "code": "            else if(ans % 7 == 1)",
          "type": "IfStatement",
          "lineNum": 127
        },
        {
          "id": 128,
          "code": "                printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 128
        },
        {
          "id": 129,
          "code": "            else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 129
        },
        {
          "id": 130,
          "code": "                printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 130
        },
        {
          "id": 131,
          "code": "            else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 131
        },
        {
          "id": 132,
          "code": "                printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 132
        },
        {
          "id": 133,
          "code": "            else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 133
        },
        {
          "id": 134,
          "code": "                printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 134
        },
        {
          "id": 135,
          "code": "            else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 135
        },
        {
          "id": 136,
          "code": "                printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 136
        },
        {
          "id": 137,
          "code": "            else",
          "type": "others",
          "lineNum": 137
        },
        {
          "id": 138,
          "code": "                printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 138
        },
        {
          "id": 139,
          "code": "        }",
          "type": "others",
          "lineNum": 139
        },
        {
          "id": 140,
          "code": "        else if(month < 5)",
          "type": "IfStatement",
          "lineNum": 140
        },
        {
          "id": 141,
          "code": "        {",
          "type": "others",
          "lineNum": 141
        },
        {
          "id": 142,
          "code": "            for(int i = month; i < 5; ++i)",
          "type": "StatementExpression",
          "lineNum": 142
        },
        {
          "id": 143,
          "code": "            {",
          "type": "others",
          "lineNum": 143
        },
        {
          "id": 144,
          "code": "                if(i == 1 || i == 3)",
          "type": "IfStatement",
          "lineNum": 144
        },
        {
          "id": 145,
          "code": "                    x += 31;",
          "type": "StatementExpression",
          "lineNum": 145
        },
        {
          "id": 146,
          "code": "                else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 146
        },
        {
          "id": 147,
          "code": "                    x += 28;",
          "type": "StatementExpression",
          "lineNum": 147
        },
        {
          "id": 148,
          "code": "                else",
          "type": "others",
          "lineNum": 148
        },
        {
          "id": 149,
          "code": "                    x += 30;",
          "type": "StatementExpression",
          "lineNum": 149
        },
        {
          "id": 150,
          "code": "            }",
          "type": "others",
          "lineNum": 150
        },
        {
          "id": 151,
          "code": "            x += 25;",
          "type": "StatementExpression",
          "lineNum": 151
        },
        {
          "id": 152,
          "code": "            ans = x - day;",
          "type": "StatementExpression",
          "lineNum": 152
        },
        {
          "id": 153,
          "code": "            if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 153
        },
        {
          "id": 154,
          "code": "                printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 154
        },
        {
          "id": 155,
          "code": "            else if(ans % 7 == 6)",
          "type": "IfStatement",
          "lineNum": 155
        },
        {
          "id": 156,
          "code": "                printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 156
        },
        {
          "id": 157,
          "code": "            else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 157
        },
        {
          "id": 158,
          "code": "                printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 158
        },
        {
          "id": 159,
          "code": "            else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 159
        },
        {
          "id": 160,
          "code": "                printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 160
        },
        {
          "id": 161,
          "code": "            else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 161
        },
        {
          "id": 162,
          "code": "                printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 162
        },
        {
          "id": 163,
          "code": "            else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 163
        },
        {
          "id": 164,
          "code": "                printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 164
        },
        {
          "id": 165,
          "code": "            else",
          "type": "others",
          "lineNum": 165
        },
        {
          "id": 166,
          "code": "                printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 166
        },
        {
          "id": 167,
          "code": "        }",
          "type": "others",
          "lineNum": 167
        },
        {
          "id": 168,
          "code": "        else",
          "type": "others",
          "lineNum": 168
        },
        {
          "id": 169,
          "code": "        {",
          "type": "others",
          "lineNum": 169
        },
        {
          "id": 170,
          "code": "            if(day < 25)",
          "type": "IfStatement",
          "lineNum": 170
        },
        {
          "id": 171,
          "code": "            {",
          "type": "others",
          "lineNum": 171
        },
        {
          "id": 172,
          "code": "                ans = 25 - day;",
          "type": "StatementExpression",
          "lineNum": 172
        },
        {
          "id": 173,
          "code": "                if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 173
        },
        {
          "id": 174,
          "code": "                    printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 174
        },
        {
          "id": 175,
          "code": "                else if(ans % 7 == 6)",
          "type": "IfStatement",
          "lineNum": 175
        },
        {
          "id": 176,
          "code": "                    printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 176
        },
        {
          "id": 177,
          "code": "                else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 177
        },
        {
          "id": 178,
          "code": "                    printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 178
        },
        {
          "id": 179,
          "code": "                else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 179
        },
        {
          "id": 180,
          "code": "                    printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 180
        },
        {
          "id": 181,
          "code": "                else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 181
        },
        {
          "id": 182,
          "code": "                    printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 182
        },
        {
          "id": 183,
          "code": "                else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 183
        },
        {
          "id": 184,
          "code": "                    printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 184
        },
        {
          "id": 185,
          "code": "                else",
          "type": "others",
          "lineNum": 185
        },
        {
          "id": 186,
          "code": "                    printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 186
        },
        {
          "id": 187,
          "code": "            }",
          "type": "others",
          "lineNum": 187
        },
        {
          "id": 188,
          "code": "            else if(day > 25)",
          "type": "IfStatement",
          "lineNum": 188
        },
        {
          "id": 189,
          "code": "            {",
          "type": "others",
          "lineNum": 189
        },
        {
          "id": 190,
          "code": "                ans = day - 25;",
          "type": "StatementExpression",
          "lineNum": 190
        },
        {
          "id": 191,
          "code": "                if(ans % 7 == 0)",
          "type": "IfStatement",
          "lineNum": 191
        },
        {
          "id": 192,
          "code": "                    printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 192
        },
        {
          "id": 193,
          "code": "                else if(ans % 7 == 1)",
          "type": "IfStatement",
          "lineNum": 193
        },
        {
          "id": 194,
          "code": "                    printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 194
        },
        {
          "id": 195,
          "code": "                else if(ans % 7 == 2)",
          "type": "IfStatement",
          "lineNum": 195
        },
        {
          "id": 196,
          "code": "                    printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 196
        },
        {
          "id": 197,
          "code": "                else if(ans % 7 == 3)",
          "type": "IfStatement",
          "lineNum": 197
        },
        {
          "id": 198,
          "code": "                    printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 198
        },
        {
          "id": 199,
          "code": "                else if(ans % 7 == 4)",
          "type": "IfStatement",
          "lineNum": 199
        },
        {
          "id": 200,
          "code": "                    printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 200
        },
        {
          "id": 201,
          "code": "                else if(ans % 7 == 5)",
          "type": "IfStatement",
          "lineNum": 201
        },
        {
          "id": 202,
          "code": "                    printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 202
        },
        {
          "id": 203,
          "code": "                else",
          "type": "others",
          "lineNum": 203
        },
        {
          "id": 204,
          "code": "                    printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 204
        },
        {
          "id": 205,
          "code": "            }",
          "type": "others",
          "lineNum": 205
        },
        {
          "id": 206,
          "code": "            else",
          "type": "others",
          "lineNum": 206
        },
        {
          "id": 207,
          "code": "                printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 207
        },
        {
          "id": 208,
          "code": "        }",
          "type": "others",
          "lineNum": 208
        },
        {
          "id": 209,
          "code": "    }",
          "type": "others",
          "lineNum": 209
        },
        {
          "id": 210,
          "code": "}",
          "type": "others",
          "lineNum": 210
        }
      ]
    },
    {
      "id": 10,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310978_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        12
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include <stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int res;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d %d %d\", &y, &m, &d);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m = m + 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        y = y - 1;",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    res = (y + y / 4 - y / 100 + y / 400 + 2 * m + 3 * (m + 1) / 5 + d) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    res--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    if(res == 1)",
          "type": "IfStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    else if(res == 2)",
          "type": "IfStatement",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    else if(res == 3)",
          "type": "IfStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    else if(res == 4)",
          "type": "IfStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        printf(\"thursday\") ;",
          "type": "funCall",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    else if(res == 5)",
          "type": "IfStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    else if(res == 6)",
          "type": "IfStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    else if(res == 7)",
          "type": "IfStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "}",
          "type": "others",
          "lineNum": 27
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/310978_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 28,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include <stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int y, m, d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int res;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    scanf(\"%d %d %d\", &y, &m, &d);",
          "type": "funCall",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        m = m + 12;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        y = y - 1;",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    }",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    res = (y + y / 4 - y / 100 + y / 400 + 2 * m + 3 * (m + 1) / 5 + d) % 7 + 1;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    res--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    if(res == 1)",
          "type": "IfStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    else if(res == 2)",
          "type": "IfStatement",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    else if(res == 3)",
          "type": "IfStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    else if(res == 4)",
          "type": "IfStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        printf(\"thursday\") ;",
          "type": "funCall",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    else if(res == 5)",
          "type": "IfStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    else if(res == 6)",
          "type": "IfStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    else if(res == 7)",
          "type": "IfStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "}",
          "type": "others",
          "lineNum": 27
        }
      ]
    },
    {
      "id": 11,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/312533_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        19
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    long long year;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int month, date;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    int day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    while(scanf(\"%lld%d%d\", &year, &month, &date) != EOF)",
          "type": "WhileStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        if(month == 1)",
          "type": "IfStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "            month = 13;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "            year--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        }",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        if(month == 2)",
          "type": "IfStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        {",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "            month = 14;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            year--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        }",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        day = (date + 2 * month + 3 * (month + 1) / 5 + year + year / 4 - year / 100 + year / 400) % 7;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        day++; ",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "\t\t switch(day)",
          "type": "switchStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        {",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        case 0",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            printf(\"monday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        case 1",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "            printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        case 2",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "            printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        case 3",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        case 4",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "            printf(\"friday\");",
          "type": "funCall",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        case 5",
          "type": "others",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "            printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        case 6",
          "type": "others",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        }",
          "type": "others",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    }",
          "type": "others",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "}",
          "type": "others",
          "lineNum": 46
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/312533_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 47,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    long long year;",
          "type": "LocalVariableDeclaration",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int month, date;",
          "type": "LocalVariableDeclaration",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    int day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    while(scanf(\"%lld%d%d\", &year, &month, &date) != EOF)",
          "type": "WhileStatement",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        if(month == 1)",
          "type": "IfStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "            month = 13;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "            year--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        }",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        if(month == 2)",
          "type": "IfStatement",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        {",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "            month = 14;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            year--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        }",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        day = (date + 2 * month + 3 * (month + 1) / 5 + year + year / 4 - year / 100 + year / 400) % 7;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        day++; ",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "\t\t switch(day)",
          "type": "switchStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        {",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        case 0",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            printf(\"monday\");",
          "type": "funCall",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        case 1",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "            printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "        case 2",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "            printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        case 3",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        case 4",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "            printf(\"friday\");",
          "type": "funCall",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        case 5",
          "type": "others",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "            printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        case 6",
          "type": "others",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "            break;",
          "type": "BreakStatement",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        }",
          "type": "others",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    }",
          "type": "others",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "}",
          "type": "others",
          "lineNum": 46
        }
      ]
    },
    {
      "id": 12,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466268_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        40
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<cmath>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<cstdio>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "#include<cstdlib>",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "#include<cstring>",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "#include<algorithm>",
          "type": "others",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "#include<vector>",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "#include<string>",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "#include<stack>",
          "type": "others",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "#include<queue>",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "int main()",
          "type": "Method",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "{",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    cin >> year >> month >> day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    long long n1 = 0, n2 = 0;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    for(int i = 1801; i <= year; i++)",
          "type": "StatementExpression",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    {",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        if((i - 1) % 4 == 0 && (i - 1) % 100 != 0 || (i - 1) % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        {",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "            n1 += 366;",
          "type": "StatementExpression",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        }",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        else",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            n1 += 365;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    }",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    for(int i = 2; i <= month; i++)",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    {",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        if((i - 1) == 1 || (i - 1) == 3 || (i - 1) == 5 || (i - 1) == 7 || (i - 1) == 8 || (i - 1) == 10 || (i - 1) == 12)",
          "type": "IfStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            n2 += 31;",
          "type": "StatementExpression",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        else if(i - 1 == 2)",
          "type": "IfStatement",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        {",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "            if(year % 4 == 0 && year % 100 != 0 || year % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "                n2 += 29;",
          "type": "StatementExpression",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            else",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "                n2 += 28;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        }",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        else",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "            n2 += 30;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    }",
          "type": "others",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    long n3 = n2 % 7 + n1 % 7 + day;",
          "type": "StatementExpression",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    int add = (n3 + 3) % 7;",
          "type": "StatementExpression",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "    if(add == 0)",
          "type": "IfStatement",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        add = 7;",
          "type": "StatementExpression",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    if(add == 1)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "        cout << \"monday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "    if(add == 2)",
          "type": "IfStatement",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "        cout << \"tuesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "    if(add == 3)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "        cout << \"wednesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "    if(add == 4)",
          "type": "IfStatement",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "        cout << \"thursday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "    if(add == 5)",
          "type": "IfStatement",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "        cout << \"friday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "    if(add == 6)",
          "type": "IfStatement",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "        cout << \"saturday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "    if(add == 7)",
          "type": "IfStatement",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "        cout << \"sunday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "",
          "type": "others",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "}",
          "type": "others",
          "lineNum": 59
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466268_buggy.c",
          "id": 0,
          "startLine": 12,
          "endLine": 60,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<cmath>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<cstdio>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "#include<cstdlib>",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "#include<cstring>",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "#include<algorithm>",
          "type": "others",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "#include<vector>",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "#include<string>",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "#include<stack>",
          "type": "others",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "#include<queue>",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "int main()",
          "type": "Method",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "{",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    cin >> year >> month >> day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    long long n1 = 0, n2 = 0;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    for(int i = 1801; i <= year; i++)",
          "type": "StatementExpression",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    {",
          "type": "others",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        if((i - 1) % 4 == 0 && (i - 1) % 100 != 0 || (i - 1) % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        {",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "            n1 += 366;",
          "type": "StatementExpression",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        }",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        else",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            n1 += 365;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    }",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    for(int i = 2; i <= month; i++)",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    {",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        if((i - 1) == 1 || (i - 1) == 3 || (i - 1) == 5 || (i - 1) == 7 || (i - 1) == 8 || (i - 1) == 10 || (i - 1) == 12)",
          "type": "IfStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            n2 += 31;",
          "type": "StatementExpression",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        else if(i - 1 == 2)",
          "type": "IfStatement",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        {",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "            if(year % 4 == 0 && year % 100 != 0 || year % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "                n2 += 29;",
          "type": "StatementExpression",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            else",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "                n2 += 28;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        }",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        else",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "            n2 += 30;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    }",
          "type": "others",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    long n3 = n2 % 7 + n1 % 7 + day;",
          "type": "StatementExpression",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    int add = (n3 + 3) % 7;",
          "type": "StatementExpression",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "    if(add == 0)",
          "type": "IfStatement",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        add = 7;",
          "type": "StatementExpression",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    if(add == 1)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "        cout << \"monday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "    if(add == 2)",
          "type": "IfStatement",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "        cout << \"tuesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "    if(add == 3)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "        cout << \"wednesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "    if(add == 4)",
          "type": "IfStatement",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "        cout << \"thursday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "    if(add == 5)",
          "type": "IfStatement",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "        cout << \"friday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "    if(add == 6)",
          "type": "IfStatement",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "        cout << \"saturday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "    if(add == 7)",
          "type": "IfStatement",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "        cout << \"sunday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "",
          "type": "others",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "}",
          "type": "others",
          "lineNum": 59
        }
      ]
    },
    {
      "id": 13,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466529_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        80
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int i, a, b, c, m = 2;",
          "type": "StatementExpression",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    scanf(\"%d %d %d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(a == 1800) m = m;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    else",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        for(i = 1800; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "            if((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "            {",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "                m = m + 366;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "                m = m % 7;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "            }",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "            else",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            {",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "                m = m + 365;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "                m = m % 7;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "            }",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        }",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    }",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(b == 1)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        m = m;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    else",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    {",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        for(i = 1; i < b; i++)",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        {",
          "type": "others",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            if(i == 1)",
          "type": "IfStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "            {",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "            }",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            if(i == 3)",
          "type": "IfStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            {",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "            }",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "            if(i == 5)",
          "type": "IfStatement",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "            {",
          "type": "others",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "            }",
          "type": "others",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "            if(i == 7)",
          "type": "IfStatement",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            {",
          "type": "others",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "            }",
          "type": "others",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "            if(i == 8)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "            {",
          "type": "others",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "            }",
          "type": "others",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "            if(i == 10)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "            {",
          "type": "others",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "            }",
          "type": "others",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "            if(i == 12)",
          "type": "IfStatement",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "            {",
          "type": "others",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "            }",
          "type": "others",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "            if(i == 4)",
          "type": "IfStatement",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "            {",
          "type": "others",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "            }",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "            if(i == 6)",
          "type": "IfStatement",
          "lineNum": 60
        },
        {
          "id": 61,
          "code": "            {",
          "type": "others",
          "lineNum": 61
        },
        {
          "id": 62,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 62
        },
        {
          "id": 63,
          "code": "            }",
          "type": "others",
          "lineNum": 63
        },
        {
          "id": 64,
          "code": "            if(i == 9)",
          "type": "IfStatement",
          "lineNum": 64
        },
        {
          "id": 65,
          "code": "            {",
          "type": "others",
          "lineNum": 65
        },
        {
          "id": 66,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 66
        },
        {
          "id": 67,
          "code": "            }",
          "type": "others",
          "lineNum": 67
        },
        {
          "id": 68,
          "code": "            if(i == 11)",
          "type": "IfStatement",
          "lineNum": 68
        },
        {
          "id": 69,
          "code": "            {",
          "type": "others",
          "lineNum": 69
        },
        {
          "id": 70,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 70
        },
        {
          "id": 71,
          "code": "            }",
          "type": "others",
          "lineNum": 71
        },
        {
          "id": 72,
          "code": "            if(i == 2)",
          "type": "IfStatement",
          "lineNum": 72
        },
        {
          "id": 73,
          "code": "            {",
          "type": "others",
          "lineNum": 73
        },
        {
          "id": 74,
          "code": "                if((a % 4 == 0 && a % 100 != 0) || a % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 74
        },
        {
          "id": 75,
          "code": "                    m = m + 29;",
          "type": "StatementExpression",
          "lineNum": 75
        },
        {
          "id": 76,
          "code": "                else m = m + 28;",
          "type": "StatementExpression",
          "lineNum": 76
        },
        {
          "id": 77,
          "code": "            }",
          "type": "others",
          "lineNum": 77
        },
        {
          "id": 78,
          "code": "        }",
          "type": "others",
          "lineNum": 78
        },
        {
          "id": 79,
          "code": "    }",
          "type": "others",
          "lineNum": 79
        },
        {
          "id": 80,
          "code": "    m = m + c+1;",
          "type": "StatementExpression",
          "lineNum": 80
        },
        {
          "id": 81,
          "code": "    m = m % 7;",
          "type": "StatementExpression",
          "lineNum": 81
        },
        {
          "id": 82,
          "code": "    if(m == 0)",
          "type": "IfStatement",
          "lineNum": 82
        },
        {
          "id": 83,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 83
        },
        {
          "id": 84,
          "code": "    if(m == 1)",
          "type": "IfStatement",
          "lineNum": 84
        },
        {
          "id": 85,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 85
        },
        {
          "id": 86,
          "code": "    if(m == 2)",
          "type": "IfStatement",
          "lineNum": 86
        },
        {
          "id": 87,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 87
        },
        {
          "id": 88,
          "code": "    if(m == 3)",
          "type": "IfStatement",
          "lineNum": 88
        },
        {
          "id": 89,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 89
        },
        {
          "id": 90,
          "code": "    if(m == 4)",
          "type": "IfStatement",
          "lineNum": 90
        },
        {
          "id": 91,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 91
        },
        {
          "id": 92,
          "code": "    if(m == 5)",
          "type": "IfStatement",
          "lineNum": 92
        },
        {
          "id": 93,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 93
        },
        {
          "id": 94,
          "code": "    if(m == 6)",
          "type": "IfStatement",
          "lineNum": 94
        },
        {
          "id": 95,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 95
        },
        {
          "id": 96,
          "code": "}",
          "type": "others",
          "lineNum": 96
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466529_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 97,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int i, a, b, c, m = 2;",
          "type": "StatementExpression",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    scanf(\"%d %d %d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if(a == 1800) m = m;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    else",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    {",
          "type": "others",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        for(i = 1800; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "            if((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "            {",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "                m = m + 366;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "                m = m % 7;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "            }",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "            else",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            {",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "                m = m + 365;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "                m = m % 7;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "            }",
          "type": "others",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        }",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    }",
          "type": "others",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(b == 1)",
          "type": "IfStatement",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        m = m;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    else",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    {",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        for(i = 1; i < b; i++)",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        {",
          "type": "others",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            if(i == 1)",
          "type": "IfStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "            {",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "            }",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            if(i == 3)",
          "type": "IfStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "            {",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "            }",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "            if(i == 5)",
          "type": "IfStatement",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "            {",
          "type": "others",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "            }",
          "type": "others",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "            if(i == 7)",
          "type": "IfStatement",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            {",
          "type": "others",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "            }",
          "type": "others",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "            if(i == 8)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "            {",
          "type": "others",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "            }",
          "type": "others",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "            if(i == 10)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "            {",
          "type": "others",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "            }",
          "type": "others",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "            if(i == 12)",
          "type": "IfStatement",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "            {",
          "type": "others",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "                m = m + 31;",
          "type": "StatementExpression",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "            }",
          "type": "others",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "            if(i == 4)",
          "type": "IfStatement",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "            {",
          "type": "others",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "            }",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "            if(i == 6)",
          "type": "IfStatement",
          "lineNum": 60
        },
        {
          "id": 61,
          "code": "            {",
          "type": "others",
          "lineNum": 61
        },
        {
          "id": 62,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 62
        },
        {
          "id": 63,
          "code": "            }",
          "type": "others",
          "lineNum": 63
        },
        {
          "id": 64,
          "code": "            if(i == 9)",
          "type": "IfStatement",
          "lineNum": 64
        },
        {
          "id": 65,
          "code": "            {",
          "type": "others",
          "lineNum": 65
        },
        {
          "id": 66,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 66
        },
        {
          "id": 67,
          "code": "            }",
          "type": "others",
          "lineNum": 67
        },
        {
          "id": 68,
          "code": "            if(i == 11)",
          "type": "IfStatement",
          "lineNum": 68
        },
        {
          "id": 69,
          "code": "            {",
          "type": "others",
          "lineNum": 69
        },
        {
          "id": 70,
          "code": "                m = m + 30;",
          "type": "StatementExpression",
          "lineNum": 70
        },
        {
          "id": 71,
          "code": "            }",
          "type": "others",
          "lineNum": 71
        },
        {
          "id": 72,
          "code": "            if(i == 2)",
          "type": "IfStatement",
          "lineNum": 72
        },
        {
          "id": 73,
          "code": "            {",
          "type": "others",
          "lineNum": 73
        },
        {
          "id": 74,
          "code": "                if((a % 4 == 0 && a % 100 != 0) || a % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 74
        },
        {
          "id": 75,
          "code": "                    m = m + 29;",
          "type": "StatementExpression",
          "lineNum": 75
        },
        {
          "id": 76,
          "code": "                else m = m + 28;",
          "type": "StatementExpression",
          "lineNum": 76
        },
        {
          "id": 77,
          "code": "            }",
          "type": "others",
          "lineNum": 77
        },
        {
          "id": 78,
          "code": "        }",
          "type": "others",
          "lineNum": 78
        },
        {
          "id": 79,
          "code": "    }",
          "type": "others",
          "lineNum": 79
        },
        {
          "id": 80,
          "code": "    m = m + c+1;",
          "type": "StatementExpression",
          "lineNum": 80
        },
        {
          "id": 81,
          "code": "    m = m % 7;",
          "type": "StatementExpression",
          "lineNum": 81
        },
        {
          "id": 82,
          "code": "    if(m == 0)",
          "type": "IfStatement",
          "lineNum": 82
        },
        {
          "id": 83,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 83
        },
        {
          "id": 84,
          "code": "    if(m == 1)",
          "type": "IfStatement",
          "lineNum": 84
        },
        {
          "id": 85,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 85
        },
        {
          "id": 86,
          "code": "    if(m == 2)",
          "type": "IfStatement",
          "lineNum": 86
        },
        {
          "id": 87,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 87
        },
        {
          "id": 88,
          "code": "    if(m == 3)",
          "type": "IfStatement",
          "lineNum": 88
        },
        {
          "id": 89,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 89
        },
        {
          "id": 90,
          "code": "    if(m == 4)",
          "type": "IfStatement",
          "lineNum": 90
        },
        {
          "id": 91,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 91
        },
        {
          "id": 92,
          "code": "    if(m == 5)",
          "type": "IfStatement",
          "lineNum": 92
        },
        {
          "id": 93,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 93
        },
        {
          "id": 94,
          "code": "    if(m == 6)",
          "type": "IfStatement",
          "lineNum": 94
        },
        {
          "id": 95,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 95
        },
        {
          "id": 96,
          "code": "}",
          "type": "others",
          "lineNum": 96
        }
      ]
    },
    {
      "id": 14,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466598_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        37
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int a, b, c, ye = 0, fe = 0, i;",
          "type": "StatementExpression",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    scanf(\"%d %d %d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    for(i = 1800; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        if(i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "            ye = ye + 366;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        else",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "            ye = ye + 365;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    }",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(a % 400 == 0 || (a % 4 == 0 && a % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    {",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        for(i = b - 1; i > 0; i--)",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        {",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "                fe = fe + 31;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "            else if(i == 4 || i == 6 || i == 9 || i == 11)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "                fe = fe + 30;",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "            else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "                fe = fe + 29;",
          "type": "StatementExpression",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        }",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    }",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    else",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    {",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        for(i = b - 1; i > 0; i--)",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        {",
          "type": "others",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "                fe = fe + 31;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "            else if(i == 4 || i == 6 || i == 9 || i == 11)",
          "type": "IfStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "                fe = fe + 30;",
          "type": "StatementExpression",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "                fe = fe + 28;",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        }",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    }",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    int x, y;",
          "type": "LocalVariableDeclaration",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    x = fe + ye + c - 1;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    y = x % 7;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    if(y == 6)",
          "type": "IfStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    else if(y == 0)",
          "type": "IfStatement",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    else if(y == 1)",
          "type": "IfStatement",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    else if(y == 2)",
          "type": "IfStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "    else if(y == 3)",
          "type": "IfStatement",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "    else if(y == 4)",
          "type": "IfStatement",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "    else if(y == 5)",
          "type": "IfStatement",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "}",
          "type": "others",
          "lineNum": 53
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466598_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 54,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int a, b, c, ye = 0, fe = 0, i;",
          "type": "StatementExpression",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    scanf(\"%d %d %d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    for(i = 1800; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        if(i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "            ye = ye + 366;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        else",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "            ye = ye + 365;",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    }",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    if(a % 400 == 0 || (a % 4 == 0 && a % 100 != 0))",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    {",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "        for(i = b - 1; i > 0; i--)",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        {",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "                fe = fe + 31;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "            else if(i == 4 || i == 6 || i == 9 || i == 11)",
          "type": "IfStatement",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "                fe = fe + 30;",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "            else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "                fe = fe + 29;",
          "type": "StatementExpression",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        }",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    }",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    else",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    {",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        for(i = b - 1; i > 0; i--)",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        {",
          "type": "others",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "            if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "                fe = fe + 31;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "            else if(i == 4 || i == 6 || i == 9 || i == 11)",
          "type": "IfStatement",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "                fe = fe + 30;",
          "type": "StatementExpression",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "                fe = fe + 28;",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        }",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    }",
          "type": "others",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    int x, y;",
          "type": "LocalVariableDeclaration",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    x = fe + ye + c - 1;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    y = x % 7;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    if(y == 6)",
          "type": "IfStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    else if(y == 0)",
          "type": "IfStatement",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    else if(y == 1)",
          "type": "IfStatement",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    else if(y == 2)",
          "type": "IfStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "    else if(y == 3)",
          "type": "IfStatement",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "    else if(y == 4)",
          "type": "IfStatement",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "    else if(y == 5)",
          "type": "IfStatement",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "}",
          "type": "others",
          "lineNum": 53
        }
      ]
    },
    {
      "id": 15,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466685_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        36
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int n, y, r, a, b, c, t = -1, i, j, d = 0;",
          "type": "StatementExpression",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    n = 1800, y = 1, r = 1;",
          "type": "StatementExpression",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    while(scanf(\"%d%d%d\", &a, &b, &c) != EOF)",
          "type": "WhileStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        t = -1;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        d = 0;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        for(i = n; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        {",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "            if(i % 4 == 0 && i % 100 != 0)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "                t += 366;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "            else if(i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "                t += 366;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            else",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "                t += 365;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        }",
          "type": "others",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        for(j = y; j < b; j++)",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        {",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "            if(j == 1 || j == 3 || j == 5 || j == 7 || j == 8 || j == 10 || j == 12)",
          "type": "IfStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "                t += 31;",
          "type": "StatementExpression",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            else if(j == 2)",
          "type": "IfStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "            {",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "                if(i % 4 == 0 && i % 100 != 0)",
          "type": "IfStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "                    t += 29;",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "                else if(i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "                    t += 29;",
          "type": "StatementExpression",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "                else",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "                    t += 28;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "            }",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            else",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "                t += 30;",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        }",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        t += c;",
          "type": "StatementExpression",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        d = t % 7 + 2;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        d = d % 7;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "        if(d == 1)",
          "type": "IfStatement",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "            printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        if(d == 2)",
          "type": "IfStatement",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        if(d == 3)",
          "type": "IfStatement",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "            printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        if(d == 4)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "            printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "        if(d == 5)",
          "type": "IfStatement",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "            printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "        if(d == 6)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "            printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "        if(d == 0)",
          "type": "IfStatement",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "            printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "    }",
          "type": "others",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "}",
          "type": "others",
          "lineNum": 53
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          1,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466685_buggy.c",
          "id": 0,
          "startLine": 2,
          "endLine": 54,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "int main()",
          "type": "Method",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "{",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "    int n, y, r, a, b, c, t = -1, i, j, d = 0;",
          "type": "StatementExpression",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    n = 1800, y = 1, r = 1;",
          "type": "StatementExpression",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    while(scanf(\"%d%d%d\", &a, &b, &c) != EOF)",
          "type": "WhileStatement",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    {",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "        t = -1;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "        d = 0;",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        for(i = n; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        {",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "            if(i % 4 == 0 && i % 100 != 0)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "                t += 366;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "            else if(i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "                t += 366;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "            else",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "                t += 365;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        }",
          "type": "others",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        for(j = y; j < b; j++)",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        {",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "            if(j == 1 || j == 3 || j == 5 || j == 7 || j == 8 || j == 10 || j == 12)",
          "type": "IfStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "                t += 31;",
          "type": "StatementExpression",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            else if(j == 2)",
          "type": "IfStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "            {",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "                if(i % 4 == 0 && i % 100 != 0)",
          "type": "IfStatement",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "                    t += 29;",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "                else if(i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "                    t += 29;",
          "type": "StatementExpression",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "                else",
          "type": "others",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "                    t += 28;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "            }",
          "type": "others",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "            else",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "                t += 30;",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        }",
          "type": "others",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        t += c;",
          "type": "StatementExpression",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        d = t % 7 + 2;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        d = d % 7;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "        if(d == 1)",
          "type": "IfStatement",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "            printf(\"monday\\n\");",
          "type": "funCall",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        if(d == 2)",
          "type": "IfStatement",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "            printf(\"tuesday\\n\");",
          "type": "funCall",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        if(d == 3)",
          "type": "IfStatement",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "            printf(\"wednesday\\n\");",
          "type": "funCall",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        if(d == 4)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "            printf(\"thursday\\n\");",
          "type": "funCall",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "        if(d == 5)",
          "type": "IfStatement",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "            printf(\"friday\\n\");",
          "type": "funCall",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "        if(d == 6)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "            printf(\"saturday\\n\");",
          "type": "funCall",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "        if(d == 0)",
          "type": "IfStatement",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "            printf(\"sunday\\n\");",
          "type": "funCall",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "    }",
          "type": "others",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "}",
          "type": "others",
          "lineNum": 53
        }
      ]
    },
    {
      "id": 16,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466909_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        30
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "typedef long long ll;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "int main()",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    cin >> year >> month >> day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    ll tian = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    for(int i = 1800; i <= year - 1; i++)",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        if((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "            tian += 366;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        else",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "            tian += 365;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    }",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    for(int i = 1; i <= month - 1; i++)",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    {",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "            tian += 31;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        {",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "            if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "                tian += 29;",
          "type": "StatementExpression",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            else",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "                tian += 28;",
          "type": "StatementExpression",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        }",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        else",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "            tian += 30;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    }",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    tian += day;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    ll sj = tian % 7;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "    if(sj == 0)",
          "type": "IfStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        cout << \"sunday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    if(sj == 1)",
          "type": "IfStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        cout << \"monday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    if(sj == 2)",
          "type": "IfStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        cout << \"tuesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    if(sj == 3)",
          "type": "IfStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "        cout << \"wednesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    if(sj == 4)",
          "type": "IfStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        cout << \"thursday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    if(sj == 5)",
          "type": "IfStatement",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        cout << \"friday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    if(sj == 6)",
          "type": "IfStatement",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        cout << \"saturday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "}",
          "type": "others",
          "lineNum": 46
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/466909_buggy.c",
          "id": 0,
          "startLine": 4,
          "endLine": 47,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "typedef long long ll;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "int main()",
          "type": "Method",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "{",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    cin >> year >> month >> day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    ll tian = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    for(int i = 1800; i <= year - 1; i++)",
          "type": "StatementExpression",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        if((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "            tian += 366;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "        else",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "            tian += 365;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    }",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    for(int i = 1; i <= month - 1; i++)",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    {",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        if(i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12)",
          "type": "IfStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "            tian += 31;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        else if(i == 2)",
          "type": "IfStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "        {",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "            if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)",
          "type": "IfStatement",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "                tian += 29;",
          "type": "StatementExpression",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "            else",
          "type": "others",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "                tian += 28;",
          "type": "StatementExpression",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        }",
          "type": "others",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        else",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "            tian += 30;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    }",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    tian += day;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    ll sj = tian % 7;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "    if(sj == 0)",
          "type": "IfStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        cout << \"sunday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    if(sj == 1)",
          "type": "IfStatement",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        cout << \"monday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    if(sj == 2)",
          "type": "IfStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "        cout << \"tuesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    if(sj == 3)",
          "type": "IfStatement",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "        cout << \"wednesday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    if(sj == 4)",
          "type": "IfStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "        cout << \"thursday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    if(sj == 5)",
          "type": "IfStatement",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        cout << \"friday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    if(sj == 6)",
          "type": "IfStatement",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "        cout << \"saturday\";",
          "type": "LocalVariableDeclaration",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "}",
          "type": "others",
          "lineNum": 46
        }
      ]
    },
    {
      "id": 17,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/469643_buggy.c",
      "result": [
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        27
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<bits/stdc++.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int fun(int a, int b, int c)",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int flag = 0;",
          "type": "StatementExpression",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if((a % 4 == 0 && a % 100 != 0) || (a % 400 == 100))flag = 1;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    else flag = 0;",
          "type": "StatementExpression",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    int k = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    switch(b - 1)",
          "type": "switchStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    case 11 ",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    case 10 ",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    case 9 ",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    case 8 ",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    case 7 ",
          "type": "others",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 6 ",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    case 5 ",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    case 4 ",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 3 ",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    case 2 ",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        k += 28 + flag;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    case 1 ",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    }",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "    k += c;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    return k;",
          "type": "ReturnStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "}",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "int main()",
          "type": "Method",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "{",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    int count = 0, a, b, c;",
          "type": "StatementExpression",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    scanf(\"%d %d %d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    int num = a - 1 + (a - 1) / 4 - (a - 1) / 100 + (a - 1) / 400;",
          "type": "StatementExpression",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "    int f = fun(a, b, c);",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    int k = (num + f) % 7;",
          "type": "StatementExpression",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    if(k == 1)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "    if(k == 2)",
          "type": "IfStatement",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "    if(k == 3)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "    if(k == 4)",
          "type": "IfStatement",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "    if(k == 5)",
          "type": "IfStatement",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "    if(k == 6)",
          "type": "IfStatement",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "    if(k == 0)",
          "type": "IfStatement",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "}",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "",
          "type": "others",
          "lineNum": 60
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          0,
          1,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/469643_buggy.c",
          "id": 0,
          "startLine": 3,
          "endLine": 37,
          "name": "int fun(int a, int b, int c)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/469643_buggy.c",
          "id": 1,
          "startLine": 38,
          "endLine": 60,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<bits/stdc++.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "int fun(int a, int b, int c)",
          "type": "Method",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "{",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "    int flag = 0;",
          "type": "StatementExpression",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "    if((a % 4 == 0 && a % 100 != 0) || (a % 400 == 100))flag = 1;",
          "type": "StatementExpression",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "    else flag = 0;",
          "type": "StatementExpression",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    int k = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    switch(b - 1)",
          "type": "switchStatement",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    {",
          "type": "others",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "    case 11 ",
          "type": "others",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    case 10 ",
          "type": "others",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    case 9 ",
          "type": "others",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    case 8 ",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "    case 7 ",
          "type": "others",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 6 ",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    case 5 ",
          "type": "others",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    case 4 ",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    case 3 ",
          "type": "others",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        k += 30;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    case 2 ",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        k += 28 + flag;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    case 1 ",
          "type": "others",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        k += 31;",
          "type": "StatementExpression",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    }",
          "type": "others",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "    k += c;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    return k;",
          "type": "ReturnStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "}",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "int main()",
          "type": "Method",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "{",
          "type": "others",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    int count = 0, a, b, c;",
          "type": "StatementExpression",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    scanf(\"%d %d %d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    int num = a - 1 + (a - 1) / 4 - (a - 1) / 100 + (a - 1) / 400;",
          "type": "StatementExpression",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "    int f = fun(a, b, c);",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    int k = (num + f) % 7;",
          "type": "StatementExpression",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    if(k == 1)",
          "type": "IfStatement",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "        printf(\"monday\");",
          "type": "funCall",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "    if(k == 2)",
          "type": "IfStatement",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "        printf(\"tuesday\");",
          "type": "funCall",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "    if(k == 3)",
          "type": "IfStatement",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "        printf(\"wednesday\");",
          "type": "funCall",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "    if(k == 4)",
          "type": "IfStatement",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "        printf(\"thursday\");",
          "type": "funCall",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "    if(k == 5)",
          "type": "IfStatement",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "        printf(\"friday\");",
          "type": "funCall",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "    if(k == 6)",
          "type": "IfStatement",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "        printf(\"saturday\");",
          "type": "funCall",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "    if(k == 0)",
          "type": "IfStatement",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "        printf(\"sunday\");",
          "type": "funCall",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "}",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "",
          "type": "others",
          "lineNum": 60
        }
      ]
    },
    {
      "id": 18,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/469646_buggy.c",
      "result": [
        0,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        0
      ],
      "errLines": [
        13
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<string.h>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "#include<stdlib.h>",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "#include<math.h>",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "#include<ctype.h>",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "int main()",
          "type": "Method",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "{",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    int a, b, c, x = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    scanf(\"%d%d%d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    for(int j = 0; j < 1; j++)",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        for(int i = 1800; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        {",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "            if(i % 400 == 0 || i % 4 == 0 && i % 100 != 0)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "                x = 365 + x;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "            else x = x + 365;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        }",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    int d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    if((a % 4 == 0 && a / 100 != 0) || (a % 400 == 0))",
          "type": "IfStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        d = 0;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    else d = 1;",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    if(b == 1) x = 31 + x - 31 + c;",
          "type": "StatementExpression",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    if(b == 2 && d == 0) x = 60 + x + c - 29;",
          "type": "StatementExpression",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(b == 2 && d != 0) x = 59 + x + c - 28;",
          "type": "StatementExpression",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    if(b == 3 && d == 0) x = 91 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    if(b == 3 && d != 0) x = 90 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    if(b == 4 && d == 0) x = 121 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    if(b == 4 && d != 0) x = 120 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "    if(b == 5 && d == 0) x = 152 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    if(b == 5 && d != 0) x = 151 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    if(b == 6 && d == 0) x = 182 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    if(b == 6 && d != 0) x = 181 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "    if(b == 7 && d == 0) x = 213 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    if(b == 7 && d != 0) x = 212 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    if(b == 8 && d == 0) x = 244 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "    if(b == 8 && d != 0) x = 243 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    if(b == 9 && d == 0) x = 274 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    if(b == 9 && d != 0) x = 273 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    if(b == 10 && d == 0) x = 305 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    if(b == 10 && d != 0) x = 304 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    if(b == 11 && d == 0) x = 335 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    if(b == 11 && d != 0) x = 334 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    if(b == 12 && d == 0) x = 366 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "    if(b == 12 && d != 0) x = 365 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    if(x % 7 == 0) printf(\"tuesday\");",
          "type": "StatementExpression",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    else if(x % 7 == 1) printf(\"wednesday\");",
          "type": "StatementExpression",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    else if(x % 7 == 2) printf(\"thursday\");",
          "type": "StatementExpression",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "    else if(x % 7 == 3) printf(\"friday\");",
          "type": "StatementExpression",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "    else if(x % 7 == 4) printf(\"saturday\");",
          "type": "StatementExpression",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "    else if(x % 7 == 5) printf(\"sunday\");",
          "type": "StatementExpression",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "    else if(x % 7 == 6) printf(\"monday\");",
          "type": "StatementExpression",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "",
          "type": "others",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "}",
          "type": "others",
          "lineNum": 51
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          1
        ],
        [
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          1
        ],
        [
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          1
        ],
        [
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          1
        ],
        [
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          1
        ],
        [
          1,
          1,
          0,
          1,
          1,
          0,
          0,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/469646_buggy.c",
          "id": 0,
          "startLine": 6,
          "endLine": 52,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<stdio.h>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "#include<string.h>",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "#include<stdlib.h>",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "#include<math.h>",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "#include<ctype.h>",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "int main()",
          "type": "Method",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "{",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    int a, b, c, x = 0;",
          "type": "StatementExpression",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    scanf(\"%d%d%d\", &a, &b, &c);",
          "type": "funCall",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "    for(int j = 0; j < 1; j++)",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        for(int i = 1800; i < a; i++)",
          "type": "StatementExpression",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "        {",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "            if(i % 400 == 0 || i % 4 == 0 && i % 100 != 0)",
          "type": "IfStatement",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "                x = 365 + x;",
          "type": "StatementExpression",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "            else x = x + 365;",
          "type": "StatementExpression",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "        }",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    int d;",
          "type": "LocalVariableDeclaration",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "    if((a % 4 == 0 && a / 100 != 0) || (a % 400 == 0))",
          "type": "IfStatement",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        d = 0;",
          "type": "StatementExpression",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "    else d = 1;",
          "type": "StatementExpression",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    if(b == 1) x = 31 + x - 31 + c;",
          "type": "StatementExpression",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "    if(b == 2 && d == 0) x = 60 + x + c - 29;",
          "type": "StatementExpression",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "    if(b == 2 && d != 0) x = 59 + x + c - 28;",
          "type": "StatementExpression",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "    if(b == 3 && d == 0) x = 91 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    if(b == 3 && d != 0) x = 90 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "    if(b == 4 && d == 0) x = 121 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "    if(b == 4 && d != 0) x = 120 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "    if(b == 5 && d == 0) x = 152 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    if(b == 5 && d != 0) x = 151 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "    if(b == 6 && d == 0) x = 182 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "    if(b == 6 && d != 0) x = 181 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "    if(b == 7 && d == 0) x = 213 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    if(b == 7 && d != 0) x = 212 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "    if(b == 8 && d == 0) x = 244 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "    if(b == 8 && d != 0) x = 243 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "    if(b == 9 && d == 0) x = 274 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    if(b == 9 && d != 0) x = 273 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "    if(b == 10 && d == 0) x = 305 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "    if(b == 10 && d != 0) x = 304 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "    if(b == 11 && d == 0) x = 335 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    if(b == 11 && d != 0) x = 334 + x + c - 30;",
          "type": "StatementExpression",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "    if(b == 12 && d == 0) x = 366 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "    if(b == 12 && d != 0) x = 365 + x + c - 31;",
          "type": "StatementExpression",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "    if(x % 7 == 0) printf(\"tuesday\");",
          "type": "StatementExpression",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    else if(x % 7 == 1) printf(\"wednesday\");",
          "type": "StatementExpression",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "    else if(x % 7 == 2) printf(\"thursday\");",
          "type": "StatementExpression",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "    else if(x % 7 == 3) printf(\"friday\");",
          "type": "StatementExpression",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "    else if(x % 7 == 4) printf(\"saturday\");",
          "type": "StatementExpression",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "    else if(x % 7 == 5) printf(\"sunday\");",
          "type": "StatementExpression",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "    else if(x % 7 == 6) printf(\"monday\");",
          "type": "StatementExpression",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "",
          "type": "others",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "}",
          "type": "others",
          "lineNum": 51
        }
      ]
    },
    {
      "id": 19,
      "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/476782_buggy.c",
      "result": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "errLines": [
        13
      ],
      "lineId": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "void PrintfDay(int y, int m, int d);",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "void CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "{",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    {",
          "type": "others",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    }",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    int Week = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    Week--; ",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    switch(Week)",
          "type": "switchStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    {",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    case 0",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        cout << \"monday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 1",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        cout << \"tuesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    case 2",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        cout << \"wednesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    case 3",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        cout << \"thursday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    case 4",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        cout << \"friday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    case 5",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "        cout << \"saturday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    case 6",
          "type": "others",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        cout << \"sunday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    }",
          "type": "others",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "}",
          "type": "others",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "",
          "type": "others",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "void PrintfDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "{",
          "type": "others",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "    int a = 1;",
          "type": "StatementExpression",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "}",
          "type": "others",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "int main()",
          "type": "Method",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "{",
          "type": "others",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "    int ffff = 1;",
          "type": "StatementExpression",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "    for(int jj = 0; jj > 100; jj++)",
          "type": "StatementExpression",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "    {",
          "type": "others",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "        ffff++;",
          "type": "LocalVariableDeclaration",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "    }",
          "type": "others",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "    cin >> year >> month >> day ;",
          "type": "LocalVariableDeclaration",
          "lineNum": 60
        },
        {
          "id": 61,
          "code": "    CaculateWeekDay(year, month, day);",
          "type": "funCall",
          "lineNum": 61
        },
        {
          "id": 62,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 62
        },
        {
          "id": 63,
          "code": "}",
          "type": "others",
          "lineNum": 63
        }
      ],
      "maxi": [
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          0,
          1,
          1,
          1,
          1,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1,
          1
        ]
      ],
      "funList": [
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/476782_buggy.c",
          "id": 0,
          "startLine": 6,
          "endLine": 46,
          "name": "void CaculateWeekDay(int y, int m, int d)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/476782_buggy.c",
          "id": 1,
          "startLine": 48,
          "endLine": 51,
          "name": "void PrintfDay(int y, int m, int d)"
        },
        {
          "pwd": "/home/zhangzhanwen/transtoGraceInput/ITSP-data/1642/476782_buggy.c",
          "id": 2,
          "startLine": 52,
          "endLine": 64,
          "name": "int main()"
        }
      ],
      "codeList": [
        {
          "id": 0,
          "code": "#include<iostream>",
          "type": "others",
          "lineNum": 0
        },
        {
          "id": 1,
          "code": "using namespace std;",
          "type": "others",
          "lineNum": 1
        },
        {
          "id": 2,
          "code": "",
          "type": "others",
          "lineNum": 2
        },
        {
          "id": 3,
          "code": "void PrintfDay(int y, int m, int d);",
          "type": "others",
          "lineNum": 3
        },
        {
          "id": 4,
          "code": "",
          "type": "others",
          "lineNum": 4
        },
        {
          "id": 5,
          "code": "void CaculateWeekDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 5
        },
        {
          "id": 6,
          "code": "{",
          "type": "others",
          "lineNum": 6
        },
        {
          "id": 7,
          "code": "    if(m == 1 || m == 2)",
          "type": "IfStatement",
          "lineNum": 7
        },
        {
          "id": 8,
          "code": "    {",
          "type": "others",
          "lineNum": 8
        },
        {
          "id": 9,
          "code": "        m += 12;",
          "type": "StatementExpression",
          "lineNum": 9
        },
        {
          "id": 10,
          "code": "        y--;",
          "type": "LocalVariableDeclaration",
          "lineNum": 10
        },
        {
          "id": 11,
          "code": "    }",
          "type": "others",
          "lineNum": 11
        },
        {
          "id": 12,
          "code": "    int Week = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7;",
          "type": "StatementExpression",
          "lineNum": 12
        },
        {
          "id": 13,
          "code": "    Week--; ",
          "type": "others",
          "lineNum": 13
        },
        {
          "id": 14,
          "code": "    switch(Week)",
          "type": "switchStatement",
          "lineNum": 14
        },
        {
          "id": 15,
          "code": "    {",
          "type": "others",
          "lineNum": 15
        },
        {
          "id": 16,
          "code": "    case 0",
          "type": "others",
          "lineNum": 16
        },
        {
          "id": 17,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 17
        },
        {
          "id": 18,
          "code": "        cout << \"monday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 18
        },
        {
          "id": 19,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 19
        },
        {
          "id": 20,
          "code": "    case 1",
          "type": "others",
          "lineNum": 20
        },
        {
          "id": 21,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 21
        },
        {
          "id": 22,
          "code": "        cout << \"tuesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 22
        },
        {
          "id": 23,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 23
        },
        {
          "id": 24,
          "code": "    case 2",
          "type": "others",
          "lineNum": 24
        },
        {
          "id": 25,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 25
        },
        {
          "id": 26,
          "code": "        cout << \"wednesday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 26
        },
        {
          "id": 27,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 27
        },
        {
          "id": 28,
          "code": "    case 3",
          "type": "others",
          "lineNum": 28
        },
        {
          "id": 29,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 29
        },
        {
          "id": 30,
          "code": "        cout << \"thursday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 30
        },
        {
          "id": 31,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 31
        },
        {
          "id": 32,
          "code": "    case 4",
          "type": "others",
          "lineNum": 32
        },
        {
          "id": 33,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 33
        },
        {
          "id": 34,
          "code": "        cout << \"friday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 34
        },
        {
          "id": 35,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 35
        },
        {
          "id": 36,
          "code": "    case 5",
          "type": "others",
          "lineNum": 36
        },
        {
          "id": 37,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 37
        },
        {
          "id": 38,
          "code": "        cout << \"saturday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 38
        },
        {
          "id": 39,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 39
        },
        {
          "id": 40,
          "code": "    case 6",
          "type": "others",
          "lineNum": 40
        },
        {
          "id": 41,
          "code": "        PrintfDay(y, m, d);",
          "type": "funCall",
          "lineNum": 41
        },
        {
          "id": 42,
          "code": "        cout << \"sunday\" << endl;",
          "type": "LocalVariableDeclaration",
          "lineNum": 42
        },
        {
          "id": 43,
          "code": "        break;",
          "type": "BreakStatement",
          "lineNum": 43
        },
        {
          "id": 44,
          "code": "    }",
          "type": "others",
          "lineNum": 44
        },
        {
          "id": 45,
          "code": "}",
          "type": "others",
          "lineNum": 45
        },
        {
          "id": 46,
          "code": "",
          "type": "others",
          "lineNum": 46
        },
        {
          "id": 47,
          "code": "void PrintfDay(int y, int m, int d)",
          "type": "Method",
          "lineNum": 47
        },
        {
          "id": 48,
          "code": "{",
          "type": "others",
          "lineNum": 48
        },
        {
          "id": 49,
          "code": "    int a = 1;",
          "type": "StatementExpression",
          "lineNum": 49
        },
        {
          "id": 50,
          "code": "}",
          "type": "others",
          "lineNum": 50
        },
        {
          "id": 51,
          "code": "int main()",
          "type": "Method",
          "lineNum": 51
        },
        {
          "id": 52,
          "code": "{",
          "type": "others",
          "lineNum": 52
        },
        {
          "id": 53,
          "code": "    int ffff = 1;",
          "type": "StatementExpression",
          "lineNum": 53
        },
        {
          "id": 54,
          "code": "    for(int jj = 0; jj > 100; jj++)",
          "type": "StatementExpression",
          "lineNum": 54
        },
        {
          "id": 55,
          "code": "    {",
          "type": "others",
          "lineNum": 55
        },
        {
          "id": 56,
          "code": "        ffff++;",
          "type": "LocalVariableDeclaration",
          "lineNum": 56
        },
        {
          "id": 57,
          "code": "    }",
          "type": "others",
          "lineNum": 57
        },
        {
          "id": 58,
          "code": "    int year, month, day;",
          "type": "LocalVariableDeclaration",
          "lineNum": 58
        },
        {
          "id": 59,
          "code": "",
          "type": "others",
          "lineNum": 59
        },
        {
          "id": 60,
          "code": "    cin >> year >> month >> day ;",
          "type": "LocalVariableDeclaration",
          "lineNum": 60
        },
        {
          "id": 61,
          "code": "    CaculateWeekDay(year, month, day);",
          "type": "funCall",
          "lineNum": 61
        },
        {
          "id": 62,
          "code": "    return 0;",
          "type": "ReturnStatement",
          "lineNum": 62
        },
        {
          "id": 63,
          "code": "}",
          "type": "others",
          "lineNum": 63
        }
      ]
    }
  ],
  "inList": [
    "1642.10.in",
    "1642.1.in",
    "1642.2.in",
    "1642.3.in",
    "1642.4.in",
    "1642.5.in",
    "1642.6.in",
    "1642.7.in",
    "1642.8.in",
    "1642.9.in"
  ],
  "fileId": [
    "183306_buggy.c",
    "301513_buggy.c",
    "310327_buggy.c",
    "310400_buggy.c",
    "310476_buggy.c",
    "310483_buggy.c",
    "310545_buggy.c",
    "310565_buggy.c",
    "310643_buggy.c",
    "310972_buggy.c",
    "310978_buggy.c",
    "312533_buggy.c",
    "466268_buggy.c",
    "466529_buggy.c",
    "466598_buggy.c",
    "466685_buggy.c",
    "466909_buggy.c",
    "469643_buggy.c",
    "469646_buggy.c",
    "476782_buggy.c"
  ]
}