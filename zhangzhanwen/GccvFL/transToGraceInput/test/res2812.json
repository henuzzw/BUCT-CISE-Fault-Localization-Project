[
  'readFile.py',
  'pkl',
  '../result/1927.pkl'
]
{
  'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927',
  'id': '1927',
  'fileList': [
    {
      'id': 0,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741088_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        11
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'int measure(int x, int y)',
          'type': 'Method',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '{',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '    int z = y;',
          'type': 'StatementExpression',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    while(x % y != 0)',
          'type': 'WhileStatement',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    {',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '        z = x % y;',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '        x = y;',
          'type': 'StatementExpression',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        y = z;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    }',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    z++; ',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    return z;',
          'type': 'ReturnStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '}',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '{',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    for(int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    {',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        int x, y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cin >> x >> y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        cout << measure(x, y) << endl;',
          'type': 'funCall',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    }',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741088_buggy.c',
          'id': 0,
          'startLine': 3,
          'endLine': 14,
          'name': 'int measure(int x, int y)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741088_buggy.c',
          'id': 1,
          'startLine': 16,
          'endLine': 26,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'int measure(int x, int y)',
          'type': 'Method',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '{',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '    int z = y;',
          'type': 'StatementExpression',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    while(x % y != 0)',
          'type': 'WhileStatement',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    {',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '        z = x % y;',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '        x = y;',
          'type': 'StatementExpression',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        y = z;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    }',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    z++; ',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    return z;',
          'type': 'ReturnStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '}',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '{',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    for(int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    {',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        int x, y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cin >> x >> y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        cout << measure(x, y) << endl;',
          'type': 'funCall',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    }',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ]
    },
    {
      'id': 1,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741107_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        18
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<string>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'inline int gcd(int a, int b)',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    return b ? gcd(b, a % b) ',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '}',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '{',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    while(n--)',
          'type': 'WhileStatement',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    {',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int ans =  gcd(a, b) + 1;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    }',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741107_buggy.c',
          'id': 0,
          'startLine': 10,
          'endLine': 22,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<string>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'inline int gcd(int a, int b)',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    return b ? gcd(b, a % b) ',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '}',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '{',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    while(n--)',
          'type': 'WhileStatement',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    {',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int ans =  gcd(a, b) + 1;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    }',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ]
    },
    {
      'id': 2,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741110_buggy.c',
      'result': [
        1,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        19,
        20
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    while(n--)',
          'type': 'WhileStatement',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    {',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        int min, max;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        min = a > b ? b ',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '        max = a > b ? a ',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        int temp = 0;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        while(max % min != 0)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '            temp = max % min;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '            min = max;',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '            max = temp;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        }',
          'type': 'others',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << min << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741110_buggy.c',
          'id': 0,
          'startLine': 5,
          'endLine': 26,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    while(n--)',
          'type': 'WhileStatement',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    {',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        int min, max;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        min = a > b ? b ',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '        max = a > b ? a ',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        int temp = 0;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        while(max % min != 0)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '            temp = max % min;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '            min = max;',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '            max = temp;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        }',
          'type': 'others',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << min << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ]
    },
    {
      'id': 3,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741121_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        34,
        37
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<stdio.h>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include<stdlib.h>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#include<cstdio>',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '#include<math.h>',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '#include<stack>',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '#include<vector>',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '#include<queue>',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '#include<limits.h>',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '#include<cstring>',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': 'int F(int a, int b)',
          'type': 'Method',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '{',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    int c = 0, d = 1;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    while(d)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        c = a / b;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        d = a % b;',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        a = b;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        b = d;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    }',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    return a;',
          'type': 'ReturnStatement',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '}',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '{',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '    int n, m, t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '    {',
          'type': 'others',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '        int num;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '        if(m > n)',
          'type': 'IfStatement',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '            num = F(m, n) + 1;',
          'type': 'StatementExpression',
          'lineNum': 34
        },
        {
          'id': 35,
          'code': '        else',
          'type': 'others',
          'lineNum': 35
        },
        {
          'id': 36,
          'code': '        {',
          'type': 'others',
          'lineNum': 36
        },
        {
          'id': 37,
          'code': '            num = F(n, m) - 1;',
          'type': 'StatementExpression',
          'lineNum': 37
        },
        {
          'id': 38,
          'code': '        }',
          'type': 'others',
          'lineNum': 38
        },
        {
          'id': 39,
          'code': '        cout << num << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 39
        },
        {
          'id': 40,
          'code': '    }',
          'type': 'others',
          'lineNum': 40
        },
        {
          'id': 41,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 41
        },
        {
          'id': 42,
          'code': '}',
          'type': 'others',
          'lineNum': 42
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741121_buggy.c',
          'id': 0,
          'startLine': 14,
          'endLine': 25,
          'name': 'int F(int a, int b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741121_buggy.c',
          'id': 1,
          'startLine': 26,
          'endLine': 43,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<stdio.h>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include<stdlib.h>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#include<cstdio>',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '#include<math.h>',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '#include<stack>',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '#include<vector>',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '#include<queue>',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '#include<limits.h>',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '#include<cstring>',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': 'int F(int a, int b)',
          'type': 'Method',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '{',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    int c = 0, d = 1;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    while(d)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        c = a / b;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        d = a % b;',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        a = b;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        b = d;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    }',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    return a;',
          'type': 'ReturnStatement',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '}',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '{',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '    int n, m, t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '    {',
          'type': 'others',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '        int num;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '        if(m > n)',
          'type': 'IfStatement',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '            num = F(m, n) + 1;',
          'type': 'StatementExpression',
          'lineNum': 34
        },
        {
          'id': 35,
          'code': '        else',
          'type': 'others',
          'lineNum': 35
        },
        {
          'id': 36,
          'code': '        {',
          'type': 'others',
          'lineNum': 36
        },
        {
          'id': 37,
          'code': '            num = F(n, m) - 1;',
          'type': 'StatementExpression',
          'lineNum': 37
        },
        {
          'id': 38,
          'code': '        }',
          'type': 'others',
          'lineNum': 38
        },
        {
          'id': 39,
          'code': '        cout << num << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 39
        },
        {
          'id': 40,
          'code': '    }',
          'type': 'others',
          'lineNum': 40
        },
        {
          'id': 41,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 41
        },
        {
          'id': 42,
          'code': '}',
          'type': 'others',
          'lineNum': 42
        }
      ]
    },
    {
      'id': 4,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741136_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        13
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'void gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int c;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    c = a % b;',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    while (c)',
          'type': 'WhileStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        a = b;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        b = c;',
          'type': 'StatementExpression',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        c = a % b;',
          'type': 'StatementExpression',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    }',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    b++;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    cout << b << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '}',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '{',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    int\tn;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '    for (int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    {',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '        gcd(a, b);',
          'type': 'funCall',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '    }',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '}',
          'type': 'others',
          'lineNum': 27
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741136_buggy.c',
          'id': 0,
          'startLine': 4,
          'endLine': 16,
          'name': 'void gcd(int a, int b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741136_buggy.c',
          'id': 1,
          'startLine': 18,
          'endLine': 28,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'void gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int c;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    c = a % b;',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    while (c)',
          'type': 'WhileStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        a = b;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        b = c;',
          'type': 'StatementExpression',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        c = a % b;',
          'type': 'StatementExpression',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    }',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    b++;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    cout << b << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '}',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '{',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    int\tn;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '    for (int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    {',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '        gcd(a, b);',
          'type': 'funCall',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '    }',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '}',
          'type': 'others',
          'lineNum': 27
        }
      ]
    },
    {
      'id': 5,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741150_buggy.c',
      'result': [
        1,
        1,
        1,
        1,
        1
      ],
      'errLines': [
        9
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        int m, n, temp = 1;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        while(temp = m % n)',
          'type': 'WhileStatement',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        {',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            n = temp;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        }',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        cout << n << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    }',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '}',
          'type': 'others',
          'lineNum': 18
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741150_buggy.c',
          'id': 0,
          'startLine': 4,
          'endLine': 19,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        int m, n, temp = 1;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        while(temp = m % n)',
          'type': 'WhileStatement',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        {',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            n = temp;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        }',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        cout << n << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    }',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '}',
          'type': 'others',
          'lineNum': 18
        }
      ]
    },
    {
      'id': 6,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741153_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        23
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include <math.h>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#define MAX 2000',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '{',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    int t, m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    {',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        if(m < n)',
          'type': 'IfStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '        {',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            int temp;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '            temp = m;',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '            n = temp;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        }',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        int z = n;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        while(m % n != 0)',
          'type': 'WhileStatement',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        {',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '            z = m % n +1;',
          'type': 'StatementExpression',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '            n = z;',
          'type': 'StatementExpression',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '        }',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        cout << z << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '    }',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '}',
          'type': 'others',
          'lineNum': 30
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741153_buggy.c',
          'id': 0,
          'startLine': 7,
          'endLine': 31,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include <math.h>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#define MAX 2000',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '{',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    int t, m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    {',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        if(m < n)',
          'type': 'IfStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '        {',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            int temp;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '            temp = m;',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '            n = temp;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        }',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        int z = n;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        while(m % n != 0)',
          'type': 'WhileStatement',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        {',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '            z = m % n +1;',
          'type': 'StatementExpression',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '            n = z;',
          'type': 'StatementExpression',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '        }',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        cout << z << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '    }',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '}',
          'type': 'others',
          'lineNum': 30
        }
      ]
    },
    {
      'id': 7,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741155_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        18
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'long long bcd(long long m, long long n)',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    if(n == 0)return m;',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    else',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '        return bcd(n, m % n);',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '}',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '{',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    while(T--)',
          'type': 'WhileStatement',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    {',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        long long m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        printf("%lld\\n", bcd(m, n) + 1);',
          'type': 'funCall',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    }',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741155_buggy.c',
          'id': 0,
          'startLine': 11,
          'endLine': 22,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'long long bcd(long long m, long long n)',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    if(n == 0)return m;',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    else',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '        return bcd(n, m % n);',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '}',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '{',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    while(T--)',
          'type': 'WhileStatement',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    {',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        long long m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        printf("%lld\\n", bcd(m, n) + 1);',
          'type': 'funCall',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    }',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ]
    },
    {
      'id': 8,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741156_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        18
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<string>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    if(b == 0) return a;',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    return gcd(b, a % b);',
          'type': 'ReturnStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '}',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': 'signed main()',
          'type': 'Method',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '{',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    while(T--)',
          'type': 'WhileStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    {',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        if(m < n) swap(m, n);',
          'type': 'funCall',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int G = gcd(m, n) + n;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cout << G << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    }',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '}',
          'type': 'others',
          'lineNum': 22
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741156_buggy.c',
          'id': 0,
          'startLine': 5,
          'endLine': 9,
          'name': 'int gcd(int a, int b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741156_buggy.c',
          'id': 1,
          'startLine': 10,
          'endLine': 23,
          'name': 'signed main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<string>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    if(b == 0) return a;',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    return gcd(b, a % b);',
          'type': 'ReturnStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '}',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': 'signed main()',
          'type': 'Method',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '{',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    while(T--)',
          'type': 'WhileStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    {',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        if(m < n) swap(m, n);',
          'type': 'funCall',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int G = gcd(m, n) + n;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cout << G << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    }',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '}',
          'type': 'others',
          'lineNum': 22
        }
      ]
    },
    {
      'id': 9,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741192_buggy.c',
      'result': [
        1,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        14
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<stack>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include<string.h>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    for(int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    {',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        int c;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        if(a >= b)',
          'type': 'IfStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            c = a, b =c, a = b;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        int d = 1;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        while(d != 0)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '            d = b % a;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '            b = a;',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '            a = d;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        }',
          'type': 'others',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << b << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    }',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741192_buggy.c',
          'id': 0,
          'startLine': 5,
          'endLine': 26,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<stack>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include<string.h>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    for(int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    {',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        int c;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        if(a >= b)',
          'type': 'IfStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            c = a, b =c, a = b;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        int d = 1;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        while(d != 0)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '            d = b % a;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '            b = a;',
          'type': 'StatementExpression',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '            a = d;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        }',
          'type': 'others',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << b << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    }',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ]
    },
    {
      'id': 10,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741197_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        29
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#define int long long',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#define INF 0x3f3f3f3f3f3f3f3f',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#define lowbit(x) (x & -x)',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#define mem(a, b) memset(a, b, sizeof(a))',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '{',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    if (a < b)',
          'type': 'IfStatement',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    {',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        swap(a, b);',
          'type': 'funCall',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    }',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    if (b == 0)',
          'type': 'IfStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    {',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        return a;',
          'type': 'ReturnStatement',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    }',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    return gcd(b, a % b);',
          'type': 'ReturnStatement',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '}',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': 'signed main()',
          'type': 'Method',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '{',
          'type': 'others',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    int T, ans;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    while (T--)',
          'type': 'WhileStatement',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '    {',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '        ans = gcd(a, b);',
          'type': 'StatementExpression',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '        ans++;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '    }',
          'type': 'others',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '',
          'type': 'others',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '}',
          'type': 'others',
          'lineNum': 34
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741197_buggy.c',
          'id': 0,
          'startLine': 8,
          'endLine': 19,
          'name': 'int gcd(int a, int b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741197_buggy.c',
          'id': 1,
          'startLine': 21,
          'endLine': 35,
          'name': 'signed main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#define int long long',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#define INF 0x3f3f3f3f3f3f3f3f',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#define lowbit(x) (x & -x)',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#define mem(a, b) memset(a, b, sizeof(a))',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '{',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    if (a < b)',
          'type': 'IfStatement',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    {',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        swap(a, b);',
          'type': 'funCall',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    }',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    if (b == 0)',
          'type': 'IfStatement',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    {',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '        return a;',
          'type': 'ReturnStatement',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    }',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    return gcd(b, a % b);',
          'type': 'ReturnStatement',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '}',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': 'signed main()',
          'type': 'Method',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '{',
          'type': 'others',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    int T, ans;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    while (T--)',
          'type': 'WhileStatement',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '    {',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '        ans = gcd(a, b);',
          'type': 'StatementExpression',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '        ans++;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '    }',
          'type': 'others',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '',
          'type': 'others',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '}',
          'type': 'others',
          'lineNum': 34
        }
      ]
    },
    {
      'id': 11,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741219_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        20
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '{',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    long long int m, n, ans;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    for(int i = 0; i < T; i++)',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        while(m && n)',
          'type': 'WhileStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        {',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '            if(m > n)',
          'type': 'IfStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '                m = m % n;',
          'type': 'StatementExpression',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            else',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            {',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '                n = n % m;',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '            }',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        }',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        ans = m > n ? m ',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        ans++;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        printf("%lld\\n", ans);',
          'type': 'funCall',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    }',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '}',
          'type': 'others',
          'lineNum': 24
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741219_buggy.c',
          'id': 0,
          'startLine': 3,
          'endLine': 25,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '{',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    long long int m, n, ans;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    for(int i = 0; i < T; i++)',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        while(m && n)',
          'type': 'WhileStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        {',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '            if(m > n)',
          'type': 'IfStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '                m = m % n;',
          'type': 'StatementExpression',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            else',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            {',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '                n = n % m;',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '            }',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        }',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        ans = m > n ? m ',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        ans++;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        printf("%lld\\n", ans);',
          'type': 'funCall',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '    }',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    return 0;',
          'type': 'ReturnStatement',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '}',
          'type': 'others',
          'lineNum': 24
        }
      ]
    },
    {
      'id': 12,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741221_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        17
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        int p = 0;',
          'type': 'StatementExpression',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        while(p = m % n)',
          'type': 'WhileStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        {',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            n = p;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        }',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        n--;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        cout << n << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    }',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741221_buggy.c',
          'id': 0,
          'startLine': 4,
          'endLine': 22,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    {',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        int p = 0;',
          'type': 'StatementExpression',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        while(p = m % n)',
          'type': 'WhileStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        {',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            m = n;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            n = p;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '        }',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        n--;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        cout << n << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    }',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ]
    },
    {
      'id': 13,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741230_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        22
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int maxyue(int m, int n)',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int i = n;',
          'type': 'StatementExpression',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    while(m % n != 0)',
          'type': 'WhileStatement',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    {',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '        i = m % n;',
          'type': 'StatementExpression',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        m = n;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        n = i;',
          'type': 'StatementExpression',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    }',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    return i;',
          'type': 'ReturnStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '}',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '{',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    {',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        int ans = maxyue(m, n) - 1;',
          'type': 'StatementExpression',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    }',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '}',
          'type': 'others',
          'lineNum': 26
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741230_buggy.c',
          'id': 0,
          'startLine': 4,
          'endLine': 14,
          'name': 'int maxyue(int m, int n)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741230_buggy.c',
          'id': 1,
          'startLine': 15,
          'endLine': 27,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int maxyue(int m, int n)',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    int i = n;',
          'type': 'StatementExpression',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    while(m % n != 0)',
          'type': 'WhileStatement',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    {',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '        i = m % n;',
          'type': 'StatementExpression',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        m = n;',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        n = i;',
          'type': 'StatementExpression',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    }',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    return i;',
          'type': 'ReturnStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '}',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '{',
          'type': 'others',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '    {',
          'type': 'others',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        int ans = maxyue(m, n) - 1;',
          'type': 'StatementExpression',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    }',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '}',
          'type': 'others',
          'lineNum': 26
        }
      ]
    },
    {
      'id': 14,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741242_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        21
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include <algorithm>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include <map>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include <vector>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#include <set>',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '{',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    if(b) return gcd(b, a % b);',
          'type': 'funCall',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    else return a;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '}',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': 'signed main()',
          'type': 'Method',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '{',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    {',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int ans = 0;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        ans = gcd(a, b);',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        ans--;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '}',
          'type': 'others',
          'lineNum': 24
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741242_buggy.c',
          'id': 0,
          'startLine': 7,
          'endLine': 11,
          'name': 'int gcd(int a, int b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741242_buggy.c',
          'id': 1,
          'startLine': 12,
          'endLine': 25,
          'name': 'signed main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include <algorithm>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include <map>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include <vector>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#include <set>',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '{',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    if(b) return gcd(b, a % b);',
          'type': 'funCall',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    else return a;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '}',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': 'signed main()',
          'type': 'Method',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '{',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    while(t--)',
          'type': 'WhileStatement',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    {',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int ans = 0;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cin >> a >> b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        ans = gcd(a, b);',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        ans--;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '}',
          'type': 'others',
          'lineNum': 24
        }
      ]
    },
    {
      'id': 15,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741286_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        26
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<stdio.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<string.h>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '{',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    scanf("%d", &n);',
          'type': 'funCall',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    int r, c;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    int m;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    for(int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    {',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        scanf("%d %d", &a, &b);',
          'type': 'funCall',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        if(a < b)',
          'type': 'IfStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        {',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            m = a;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            a = b;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '            b = m;',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        }',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        c = b;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        while(a % b != 0)',
          'type': 'WhileStatement',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        {',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '            r = a % b;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '            c = r;',
          'type': 'StatementExpression',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '            a = b;',
          'type': 'StatementExpression',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '            b = r;',
          'type': 'StatementExpression',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '        }',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '        c -= 2;',
          'type': 'StatementExpression',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        printf("%d\\n", c);',
          'type': 'funCall',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '    }',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '}',
          'type': 'others',
          'lineNum': 29
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741286_buggy.c',
          'id': 0,
          'startLine': 3,
          'endLine': 30,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<stdio.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<string.h>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '{',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    scanf("%d", &n);',
          'type': 'funCall',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    int r, c;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    int m;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    for(int i = 0; i < n; i++)',
          'type': 'StatementExpression',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '    {',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '        scanf("%d %d", &a, &b);',
          'type': 'funCall',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '        if(a < b)',
          'type': 'IfStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '        {',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '            m = a;',
          'type': 'StatementExpression',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '            a = b;',
          'type': 'StatementExpression',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '            b = m;',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '        }',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        c = b;',
          'type': 'StatementExpression',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        while(a % b != 0)',
          'type': 'WhileStatement',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        {',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '            r = a % b;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '            c = r;',
          'type': 'StatementExpression',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '            a = b;',
          'type': 'StatementExpression',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '            b = r;',
          'type': 'StatementExpression',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '        }',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '        c -= 2;',
          'type': 'StatementExpression',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        printf("%d\\n", c);',
          'type': 'funCall',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '    }',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '}',
          'type': 'others',
          'lineNum': 29
        }
      ]
    },
    {
      'id': 16,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741347_buggy.c',
      'result': [
        1,
        0,
        0,
        1,
        1
      ],
      'errLines': [
        44
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <stdio.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int gcd2(long a, long b)',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    long n = max(a, b);',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    long m = min(a, b);',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    if (n % m == 0)',
          'type': 'IfStatement',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    {',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        return m;',
          'type': 'ReturnStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    }',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    return gcd2(n % m, m);',
          'type': 'ReturnStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '}',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': 'int gcd1(long m, long n)',
          'type': 'Method',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '{',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    if (n > m)',
          'type': 'IfStatement',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    {',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        long t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        t = m;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        m = n;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        n = t;',
          'type': 'StatementExpression',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    long a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '    while (n != 0)',
          'type': 'WhileStatement',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '    {',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        a = m / n;',
          'type': 'StatementExpression',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '        m = a, n = b;',
          'type': 'StatementExpression',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '    }',
          'type': 'others',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '    cout << m << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '',
          'type': 'others',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '',
          'type': 'others',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '    return 1;',
          'type': 'ReturnStatement',
          'lineNum': 34
        },
        {
          'id': 35,
          'code': '}',
          'type': 'others',
          'lineNum': 35
        },
        {
          'id': 36,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 36
        },
        {
          'id': 37,
          'code': '{',
          'type': 'others',
          'lineNum': 37
        },
        {
          'id': 38,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 38
        },
        {
          'id': 39,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 39
        },
        {
          'id': 40,
          'code': '    for (int i = 0; i < T; i++)',
          'type': 'StatementExpression',
          'lineNum': 40
        },
        {
          'id': 41,
          'code': '    {',
          'type': 'others',
          'lineNum': 41
        },
        {
          'id': 42,
          'code': '        long m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 42
        },
        {
          'id': 43,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 43
        },
        {
          'id': 44,
          'code': '        long ans = gcd2(m, n) % m;',
          'type': 'StatementExpression',
          'lineNum': 44
        },
        {
          'id': 45,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 45
        },
        {
          'id': 46,
          'code': '    }',
          'type': 'others',
          'lineNum': 46
        },
        {
          'id': 47,
          'code': '}',
          'type': 'others',
          'lineNum': 47
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741347_buggy.c',
          'id': 0,
          'startLine': 5,
          'endLine': 14,
          'name': 'int gcd2(long a, long b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741347_buggy.c',
          'id': 1,
          'startLine': 16,
          'endLine': 36,
          'name': 'int gcd1(long m, long n)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741347_buggy.c',
          'id': 2,
          'startLine': 37,
          'endLine': 48,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <stdio.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int gcd2(long a, long b)',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    long n = max(a, b);',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    long m = min(a, b);',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    if (n % m == 0)',
          'type': 'IfStatement',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    {',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        return m;',
          'type': 'ReturnStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '    }',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '    return gcd2(n % m, m);',
          'type': 'ReturnStatement',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '}',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': 'int gcd1(long m, long n)',
          'type': 'Method',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '{',
          'type': 'others',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    if (n > m)',
          'type': 'IfStatement',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    {',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        long t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        t = m;',
          'type': 'StatementExpression',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        m = n;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        n = t;',
          'type': 'StatementExpression',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '    long a, b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '    while (n != 0)',
          'type': 'WhileStatement',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '    {',
          'type': 'others',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '        a = m / n;',
          'type': 'StatementExpression',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '        m = a, n = b;',
          'type': 'StatementExpression',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '    }',
          'type': 'others',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '    cout << m << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '',
          'type': 'others',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '',
          'type': 'others',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '    return 1;',
          'type': 'ReturnStatement',
          'lineNum': 34
        },
        {
          'id': 35,
          'code': '}',
          'type': 'others',
          'lineNum': 35
        },
        {
          'id': 36,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 36
        },
        {
          'id': 37,
          'code': '{',
          'type': 'others',
          'lineNum': 37
        },
        {
          'id': 38,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 38
        },
        {
          'id': 39,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 39
        },
        {
          'id': 40,
          'code': '    for (int i = 0; i < T; i++)',
          'type': 'StatementExpression',
          'lineNum': 40
        },
        {
          'id': 41,
          'code': '    {',
          'type': 'others',
          'lineNum': 41
        },
        {
          'id': 42,
          'code': '        long m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 42
        },
        {
          'id': 43,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 43
        },
        {
          'id': 44,
          'code': '        long ans = gcd2(m, n) % m;',
          'type': 'StatementExpression',
          'lineNum': 44
        },
        {
          'id': 45,
          'code': '        cout << ans << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 45
        },
        {
          'id': 46,
          'code': '    }',
          'type': 'others',
          'lineNum': 46
        },
        {
          'id': 47,
          'code': '}',
          'type': 'others',
          'lineNum': 47
        }
      ]
    },
    {
      'id': 17,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741499_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        6
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <cstdio>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int ea(int m, int n)',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int a = n % m + 1;',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    if(a == 0) return m;',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    else',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        return ea(a, m);',
          'type': 'ReturnStatement',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '}',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '{',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    long long int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    for(int i = 0; i < t; i++)',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cout << ea(m, n) << endl;',
          'type': 'funCall',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    }',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741499_buggy.c',
          'id': 0,
          'startLine': 5,
          'endLine': 11,
          'name': 'int ea(int m, int n)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741499_buggy.c',
          'id': 1,
          'startLine': 12,
          'endLine': 22,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <cstdio>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include <iostream>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': 'int ea(int m, int n)',
          'type': 'Method',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '{',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    int a = n % m + 1;',
          'type': 'StatementExpression',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '    if(a == 0) return m;',
          'type': 'StatementExpression',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    else',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '        return ea(a, m);',
          'type': 'ReturnStatement',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '}',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '{',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '    int t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    long long int m, n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    cin >> t;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    for(int i = 0; i < t; i++)',
          'type': 'StatementExpression',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        cin >> m >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cout << ea(m, n) << endl;',
          'type': 'funCall',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '    }',
          'type': 'others',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '}',
          'type': 'others',
          'lineNum': 21
        }
      ]
    },
    {
      'id': 18,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741514_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        41
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<stack>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include<cstdio>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#include<cmath>',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '#include<cstdlib>',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '#include<cstring>',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '#include<vector>',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '#include<queue>',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '#include<cstdarg>',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '{',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    while(n--)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int x, y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cin >> x >> y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        int max, min;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        if(x == y) cout << x << endl;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        else',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        {',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '            if(x > y)',
          'type': 'IfStatement',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '            {',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '                max = x;',
          'type': 'StatementExpression',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '                min = y;',
          'type': 'StatementExpression',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '            }',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '            else',
          'type': 'others',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '            {',
          'type': 'others',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '                max = y;',
          'type': 'StatementExpression',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '                min = x;',
          'type': 'StatementExpression',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '            }',
          'type': 'others',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '            int yu = max % min;',
          'type': 'StatementExpression',
          'lineNum': 34
        },
        {
          'id': 35,
          'code': '            int a = min;',
          'type': 'StatementExpression',
          'lineNum': 35
        },
        {
          'id': 36,
          'code': '            int b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 36
        },
        {
          'id': 37,
          'code': '            if(yu == 0) ',
          'type': 'IfStatement',
          'lineNum': 37
        },
        {
          'id': 38,
          'code': '\t\t\t\tb = min;',
          'type': 'StatementExpression',
          'lineNum': 38
        },
        {
          'id': 39,
          'code': '            while(yu != 0)',
          'type': 'WhileStatement',
          'lineNum': 39
        },
        {
          'id': 40,
          'code': '            {',
          'type': 'others',
          'lineNum': 40
        },
        {
          'id': 41,
          'code': '                b = yu + 1;',
          'type': 'StatementExpression',
          'lineNum': 41
        },
        {
          'id': 42,
          'code': '                yu = a % yu;',
          'type': 'StatementExpression',
          'lineNum': 42
        },
        {
          'id': 43,
          'code': '                a = b;',
          'type': 'StatementExpression',
          'lineNum': 43
        },
        {
          'id': 44,
          'code': '            }',
          'type': 'others',
          'lineNum': 44
        },
        {
          'id': 45,
          'code': '',
          'type': 'others',
          'lineNum': 45
        },
        {
          'id': 46,
          'code': '            cout << b << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 46
        },
        {
          'id': 47,
          'code': '',
          'type': 'others',
          'lineNum': 47
        },
        {
          'id': 48,
          'code': '        }',
          'type': 'others',
          'lineNum': 48
        },
        {
          'id': 49,
          'code': '    }',
          'type': 'others',
          'lineNum': 49
        },
        {
          'id': 50,
          'code': '}',
          'type': 'others',
          'lineNum': 50
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          1,
          1,
          0,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1741514_buggy.c',
          'id': 0,
          'startLine': 13,
          'endLine': 51,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include<bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': '#include<stack>',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '#include<iostream>',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': '#include<cstdio>',
          'type': 'others',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '#include<cmath>',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '#include<algorithm>',
          'type': 'others',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '#include<cstdlib>',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '#include<cstring>',
          'type': 'others',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '#include<vector>',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '#include<queue>',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '#include<cstdarg>',
          'type': 'others',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': '{',
          'type': 'others',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '    int n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    cin >> n;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    while(n--)',
          'type': 'WhileStatement',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    {',
          'type': 'others',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '        int x, y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        cin >> x >> y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        int max, min;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        if(x == y) cout << x << endl;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        else',
          'type': 'others',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '        {',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '            if(x > y)',
          'type': 'IfStatement',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '            {',
          'type': 'others',
          'lineNum': 25
        },
        {
          'id': 26,
          'code': '                max = x;',
          'type': 'StatementExpression',
          'lineNum': 26
        },
        {
          'id': 27,
          'code': '                min = y;',
          'type': 'StatementExpression',
          'lineNum': 27
        },
        {
          'id': 28,
          'code': '            }',
          'type': 'others',
          'lineNum': 28
        },
        {
          'id': 29,
          'code': '            else',
          'type': 'others',
          'lineNum': 29
        },
        {
          'id': 30,
          'code': '            {',
          'type': 'others',
          'lineNum': 30
        },
        {
          'id': 31,
          'code': '                max = y;',
          'type': 'StatementExpression',
          'lineNum': 31
        },
        {
          'id': 32,
          'code': '                min = x;',
          'type': 'StatementExpression',
          'lineNum': 32
        },
        {
          'id': 33,
          'code': '            }',
          'type': 'others',
          'lineNum': 33
        },
        {
          'id': 34,
          'code': '            int yu = max % min;',
          'type': 'StatementExpression',
          'lineNum': 34
        },
        {
          'id': 35,
          'code': '            int a = min;',
          'type': 'StatementExpression',
          'lineNum': 35
        },
        {
          'id': 36,
          'code': '            int b;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 36
        },
        {
          'id': 37,
          'code': '            if(yu == 0) ',
          'type': 'IfStatement',
          'lineNum': 37
        },
        {
          'id': 38,
          'code': '\t\t\t\tb = min;',
          'type': 'StatementExpression',
          'lineNum': 38
        },
        {
          'id': 39,
          'code': '            while(yu != 0)',
          'type': 'WhileStatement',
          'lineNum': 39
        },
        {
          'id': 40,
          'code': '            {',
          'type': 'others',
          'lineNum': 40
        },
        {
          'id': 41,
          'code': '                b = yu + 1;',
          'type': 'StatementExpression',
          'lineNum': 41
        },
        {
          'id': 42,
          'code': '                yu = a % yu;',
          'type': 'StatementExpression',
          'lineNum': 42
        },
        {
          'id': 43,
          'code': '                a = b;',
          'type': 'StatementExpression',
          'lineNum': 43
        },
        {
          'id': 44,
          'code': '            }',
          'type': 'others',
          'lineNum': 44
        },
        {
          'id': 45,
          'code': '',
          'type': 'others',
          'lineNum': 45
        },
        {
          'id': 46,
          'code': '            cout << b << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 46
        },
        {
          'id': 47,
          'code': '',
          'type': 'others',
          'lineNum': 47
        },
        {
          'id': 48,
          'code': '        }',
          'type': 'others',
          'lineNum': 48
        },
        {
          'id': 49,
          'code': '    }',
          'type': 'others',
          'lineNum': 49
        },
        {
          'id': 50,
          'code': '}',
          'type': 'others',
          'lineNum': 50
        }
      ]
    },
    {
      'id': 19,
      'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1749599_buggy.c',
      'result': [
        0,
        0,
        0,
        0,
        0
      ],
      'errLines': [
        21
      ],
      'lineId': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    if(b)',
          'type': 'IfStatement',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    {',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '        return gcd(b, a % b);',
          'type': 'ReturnStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    }',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    else',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        return a;',
          'type': 'ReturnStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '}',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '{',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    for(int i = 0; i < T; i++)',
          'type': 'StatementExpression',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    {',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        int x, y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        cin >> x >> y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        int t = gcd(x, y) + x + y;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << t << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ],
      'maxi': [
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          1,
          1,
          1,
          1,
          1
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          0,
          0,
          0,
          0,
          0
        ],
        [
          1,
          1,
          1,
          1,
          1
        ]
      ],
      'funList': [
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1749599_buggy.c',
          'id': 0,
          'startLine': 4,
          'endLine': 12,
          'name': 'int gcd(int a, int b)'
        },
        {
          'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/1927/1749599_buggy.c',
          'id': 1,
          'startLine': 14,
          'endLine': 26,
          'name': 'int main()'
        }
      ],
      'codeList': [
        {
          'id': 0,
          'code': '#include <bits/stdc++.h>',
          'type': 'others',
          'lineNum': 0
        },
        {
          'id': 1,
          'code': 'using namespace std;',
          'type': 'others',
          'lineNum': 1
        },
        {
          'id': 2,
          'code': '',
          'type': 'others',
          'lineNum': 2
        },
        {
          'id': 3,
          'code': 'int gcd(int a, int b)',
          'type': 'Method',
          'lineNum': 3
        },
        {
          'id': 4,
          'code': '{',
          'type': 'others',
          'lineNum': 4
        },
        {
          'id': 5,
          'code': '    if(b)',
          'type': 'IfStatement',
          'lineNum': 5
        },
        {
          'id': 6,
          'code': '    {',
          'type': 'others',
          'lineNum': 6
        },
        {
          'id': 7,
          'code': '        return gcd(b, a % b);',
          'type': 'ReturnStatement',
          'lineNum': 7
        },
        {
          'id': 8,
          'code': '    }',
          'type': 'others',
          'lineNum': 8
        },
        {
          'id': 9,
          'code': '    else',
          'type': 'others',
          'lineNum': 9
        },
        {
          'id': 10,
          'code': '        return a;',
          'type': 'ReturnStatement',
          'lineNum': 10
        },
        {
          'id': 11,
          'code': '}',
          'type': 'others',
          'lineNum': 11
        },
        {
          'id': 12,
          'code': '',
          'type': 'others',
          'lineNum': 12
        },
        {
          'id': 13,
          'code': 'int main()',
          'type': 'Method',
          'lineNum': 13
        },
        {
          'id': 14,
          'code': '{',
          'type': 'others',
          'lineNum': 14
        },
        {
          'id': 15,
          'code': '    int T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 15
        },
        {
          'id': 16,
          'code': '    cin >> T;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 16
        },
        {
          'id': 17,
          'code': '    for(int i = 0; i < T; i++)',
          'type': 'StatementExpression',
          'lineNum': 17
        },
        {
          'id': 18,
          'code': '    {',
          'type': 'others',
          'lineNum': 18
        },
        {
          'id': 19,
          'code': '        int x, y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 19
        },
        {
          'id': 20,
          'code': '        cin >> x >> y;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 20
        },
        {
          'id': 21,
          'code': '        int t = gcd(x, y) + x + y;',
          'type': 'StatementExpression',
          'lineNum': 21
        },
        {
          'id': 22,
          'code': '        cout << t << endl;',
          'type': 'LocalVariableDeclaration',
          'lineNum': 22
        },
        {
          'id': 23,
          'code': '    }',
          'type': 'others',
          'lineNum': 23
        },
        {
          'id': 24,
          'code': '',
          'type': 'others',
          'lineNum': 24
        },
        {
          'id': 25,
          'code': '}',
          'type': 'others',
          'lineNum': 25
        }
      ]
    }
  ],
  'inList': [
    '1927.1.in',
    '1927.2.in',
    '1927.3.in',
    '1927.4.in',
    '1927.5.in'
  ],
  'fileId': [
    '1741088_buggy.c',
    '1741107_buggy.c',
    '1741110_buggy.c',
    '1741121_buggy.c',
    '1741136_buggy.c',
    '1741150_buggy.c',
    '1741153_buggy.c',
    '1741155_buggy.c',
    '1741156_buggy.c',
    '1741192_buggy.c',
    '1741197_buggy.c',
    '1741219_buggy.c',
    '1741221_buggy.c',
    '1741230_buggy.c',
    '1741242_buggy.c',
    '1741286_buggy.c',
    '1741347_buggy.c',
    '1741499_buggy.c',
    '1741514_buggy.c',
    '1749599_buggy.c'
  ]
}
