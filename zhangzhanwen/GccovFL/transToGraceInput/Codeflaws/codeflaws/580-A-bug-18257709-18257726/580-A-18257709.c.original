#ifndef ANGELIX_OUTPUT
#define ANGELIX_OUTPUT(type, expr, id) expr
#define ANGELIX_REACHABLE(id)
#endif
#include <stdio.h>

int s[100010];

int max (int a, int b) {
    if (a > b)
        return a;
    else
        return b;
}

int main(int argc, char *argv[]) {
    int n, cnt = 1, i, ans = -1;
    scanf("%d", &n);
    for (i = 0; i < n; i++) {
        scanf("%d", &s[i]);
    }

    for (i = 0; i < n-1; i++) {
        if (s[i+1] >= s[i]) {
            cnt++;
        }
        else {
            cnt = 1;
        }
        ans = max(ans , cnt);
    }
    { char outStr[256];	sprintf( outStr, "%d\n", ANGELIX_OUTPUT(int, ans, "stdout"));	{ char outStr[256];	sprintf( outStr, "%s", outStr);	{ char outStr[256];	sprintf( outStr, "%s", outStr);	{ char outStr[256];	sprintf( outStr, "%s", outStr);	{ char outStr[256];	sprintf( outStr, "%s", outStr);	printf("%s", outStr);	ANGELIX_OUTPUT(int, strlen(outStr), "stdout"); };	ANGELIX_OUTPUT(int, strlen(outStr), "stdout"); };	ANGELIX_OUTPUT(int, strlen(outStr), "stdout"); };	ANGELIX_OUTPUT(int, strlen(outStr), "stdout"); };	ANGELIX_OUTPUT(int, strlen(outStr), "stdout"); };
    return 0;
}
