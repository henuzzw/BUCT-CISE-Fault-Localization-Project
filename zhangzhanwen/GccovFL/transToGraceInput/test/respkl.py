['readFile.py', 'pkl', '../result/2811.pkl']
{'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811', 'id': '2811', 'fileList': [
    {'id': 0, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270138_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [6], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                 {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                                 {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                 {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                 {'id': 4, 'code': '    float a1,b1,a2,b2,X,Y;', 'type': 'LocalVariableDeclaration',
                                  'lineNum': 4},
                                 {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall',
                                  'lineNum': 5},
                                 {'id': 6, 'code': '    if ((a1/a2)==b1/b2)', 'type': 'IfStatement', 'lineNum': 6},
                                 {'id': 7, 'code': '    {', 'type': 'others', 'lineNum': 7},
                                 {'id': 8, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 8},
                                 {'id': 9, 'code': '    }', 'type': 'others', 'lineNum': 9},
                                 {'id': 10, 'code': '    else', 'type': 'others', 'lineNum': 10},
                                 {'id': 11, 'code': '    {', 'type': 'others', 'lineNum': 11},
                                 {'id': 12, 'code': '        Y=(a2-a1)/(a2*b1-b2*a1);', 'type': 'StatementExpression',
                                  'lineNum': 12},
                                 {'id': 13, 'code': '        X=(b2-b1)/(b2*a1-b1*a2);', 'type': 'StatementExpression',
                                  'lineNum': 13},
                                 {'id': 14, 'code': '        printf("(%.3f,%.3f)",X,Y);', 'type': 'funCall',
                                  'lineNum': 14}, {'id': 15, 'code': '    }', 'type': 'others', 'lineNum': 15},
                                 {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                                 {'id': 17, 'code': '', 'type': 'others', 'lineNum': 17},
                                 {'id': 18, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 18},
                                 {'id': 19, 'code': '}', 'type': 'others', 'lineNum': 19}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]],
     'funList': [{'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270138_buggy.c', 'id': 0, 'startLine': 3,
                  'endLine': 20, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a1,b1,a2,b2,X,Y;', 'type': 'LocalVariableDeclaration', 'lineNum': 4},
                  {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    if ((a1/a2)==b1/b2)', 'type': 'IfStatement', 'lineNum': 6},
                  {'id': 7, 'code': '    {', 'type': 'others', 'lineNum': 7},
                  {'id': 8, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 8},
                  {'id': 9, 'code': '    }', 'type': 'others', 'lineNum': 9},
                  {'id': 10, 'code': '    else', 'type': 'others', 'lineNum': 10},
                  {'id': 11, 'code': '    {', 'type': 'others', 'lineNum': 11},
                  {'id': 12, 'code': '        Y=(a2-a1)/(a2*b1-b2*a1);', 'type': 'StatementExpression', 'lineNum': 12},
                  {'id': 13, 'code': '        X=(b2-b1)/(b2*a1-b1*a2);', 'type': 'StatementExpression', 'lineNum': 13},
                  {'id': 14, 'code': '        printf("(%.3f,%.3f)",X,Y);', 'type': 'funCall', 'lineNum': 14},
                  {'id': 15, 'code': '    }', 'type': 'others', 'lineNum': 15},
                  {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '', 'type': 'others', 'lineNum': 17},
                  {'id': 18, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 18},
                  {'id': 19, 'code': '}', 'type': 'others', 'lineNum': 19}]},
    {'id': 1, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270150_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [9, 10], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                     {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                                     {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                     {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                     {'id': 4, 'code': '    float a1,b1,a2,b2;', 'type': 'LocalVariableDeclaration',
                                      'lineNum': 4},
                                     {'id': 5, 'code': '    float X,Y;', 'type': 'LocalVariableDeclaration',
                                      'lineNum': 5},
                                     {'id': 6, 'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);', 'type': 'funCall',
                                      'lineNum': 6},
                                     {'id': 7, 'code': '    if(a1*b2-a2*b1!=0)', 'type': 'IfStatement', 'lineNum': 7},
                                     {'id': 8, 'code': '    {', 'type': 'others', 'lineNum': 8},
                                     {'id': 9, 'code': '        X=(b1-b2)/(a2*b1-a1*b2);',
                                      'type': 'StatementExpression', 'lineNum': 9},
                                     {'id': 10, 'code': '        Y=(a2-a1)/(a2*b1-a1*b2);',
                                      'type': 'StatementExpression', 'lineNum': 10},
                                     {'id': 11, 'code': '        printf("(%.3f,%.3f)",X,Y);', 'type': 'funCall',
                                      'lineNum': 11}, {'id': 12, 'code': '', 'type': 'others', 'lineNum': 12},
                                     {'id': 13, 'code': '', 'type': 'others', 'lineNum': 13},
                                     {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                                     {'id': 15, 'code': '    else', 'type': 'others', 'lineNum': 15},
                                     {'id': 16, 'code': '    {', 'type': 'others', 'lineNum': 16},
                                     {'id': 17, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 17},
                                     {'id': 18, 'code': '    }', 'type': 'others', 'lineNum': 18},
                                     {'id': 19, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 19},
                                     {'id': 20, 'code': '}', 'type': 'others', 'lineNum': 20}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1],
              [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270150_buggy.c', 'id': 0, 'startLine': 3,
         'endLine': 21, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a1,b1,a2,b2;', 'type': 'LocalVariableDeclaration', 'lineNum': 4},
                  {'id': 5, 'code': '    float X,Y;', 'type': 'LocalVariableDeclaration', 'lineNum': 5},
                  {'id': 6, 'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 6},
                  {'id': 7, 'code': '    if(a1*b2-a2*b1!=0)', 'type': 'IfStatement', 'lineNum': 7},
                  {'id': 8, 'code': '    {', 'type': 'others', 'lineNum': 8},
                  {'id': 9, 'code': '        X=(b1-b2)/(a2*b1-a1*b2);', 'type': 'StatementExpression', 'lineNum': 9},
                  {'id': 10, 'code': '        Y=(a2-a1)/(a2*b1-a1*b2);', 'type': 'StatementExpression', 'lineNum': 10},
                  {'id': 11, 'code': '        printf("(%.3f,%.3f)",X,Y);', 'type': 'funCall', 'lineNum': 11},
                  {'id': 12, 'code': '', 'type': 'others', 'lineNum': 12},
                  {'id': 13, 'code': '', 'type': 'others', 'lineNum': 13},
                  {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                  {'id': 15, 'code': '    else', 'type': 'others', 'lineNum': 15},
                  {'id': 16, 'code': '    {', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 17},
                  {'id': 18, 'code': '    }', 'type': 'others', 'lineNum': 18},
                  {'id': 19, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 19},
                  {'id': 20, 'code': '}', 'type': 'others', 'lineNum': 20}]},
    {'id': 2, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270151_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [6], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                 {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                                 {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                 {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                 {'id': 4, 'code': '    float a1,b1,a2,b2; ', 'type': 'others', 'lineNum': 4},
                                 {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall',
                                  'lineNum': 5}, {'id': 6, 'code': '    float X=(b2-b1)/((b1*a2)-(a1*b2));',
                                                  'type': 'StatementExpression', 'lineNum': 6},
                                 {'id': 7, 'code': '    float Y=(a2-a1)/((b1*a2)-(a1*b2));',
                                  'type': 'StatementExpression', 'lineNum': 7},
                                 {'id': 8, 'code': '    if (a1*b2==b1*a2)        ', 'type': 'IfStatement',
                                  'lineNum': 8}, {'id': 9, 'code': '    {', 'type': 'others', 'lineNum': 9},
                                 {'id': 10, 'code': '        printf("INF");   ', 'type': 'funCall', 'lineNum': 10},
                                 {'id': 11, 'code': '    }', 'type': 'others', 'lineNum': 11},
                                 {'id': 12, 'code': '    else', 'type': 'others', 'lineNum': 12},
                                 {'id': 13, 'code': '    {', 'type': 'others', 'lineNum': 13},
                                 {'id': 14, 'code': '        printf("(%.3f,%.3f)",X,Y);   ', 'type': 'funCall',
                                  'lineNum': 14}, {'id': 15, 'code': '    }', 'type': 'others', 'lineNum': 15},
                                 {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                                 {'id': 17, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 17},
                                 {'id': 18, 'code': '}', 'type': 'others', 'lineNum': 18}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270151_buggy.c', 'id': 0, 'startLine': 3,
         'endLine': 19, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a1,b1,a2,b2; ', 'type': 'others', 'lineNum': 4},
                  {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    float X=(b2-b1)/((b1*a2)-(a1*b2));', 'type': 'StatementExpression',
                   'lineNum': 6},
                  {'id': 7, 'code': '    float Y=(a2-a1)/((b1*a2)-(a1*b2));', 'type': 'StatementExpression',
                   'lineNum': 7},
                  {'id': 8, 'code': '    if (a1*b2==b1*a2)        ', 'type': 'IfStatement', 'lineNum': 8},
                  {'id': 9, 'code': '    {', 'type': 'others', 'lineNum': 9},
                  {'id': 10, 'code': '        printf("INF");   ', 'type': 'funCall', 'lineNum': 10},
                  {'id': 11, 'code': '    }', 'type': 'others', 'lineNum': 11},
                  {'id': 12, 'code': '    else', 'type': 'others', 'lineNum': 12},
                  {'id': 13, 'code': '    {', 'type': 'others', 'lineNum': 13},
                  {'id': 14, 'code': '        printf("(%.3f,%.3f)",X,Y);   ', 'type': 'funCall', 'lineNum': 14},
                  {'id': 15, 'code': '    }', 'type': 'others', 'lineNum': 15},
                  {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 17},
                  {'id': 18, 'code': '}', 'type': 'others', 'lineNum': 18}]},
    {'id': 3, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270162_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [11], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                  {'id': 1, 'code': 'int main()', 'type': 'Method', 'lineNum': 1},
                                  {'id': 2, 'code': '{', 'type': 'others', 'lineNum': 2}, {'id': 3,
                                                                                           'code': '    float a1,b1,a2,b2,c1,c2;               //Declaration of the variables',
                                                                                           'type': 'others',
                                                                                           'lineNum': 3},
                                  {'id': 4, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);     //For input by user',
                                   'type': 'funCall', 'lineNum': 4}, {'id': 5,
                                                                      'code': '    if(a1/b1==a2/b2||a1==0&&a2==0||b1==0&&b2==0||a1==0&&b1==0||a2==0&&b2==0)                     //If lines are parallel/overlapping',
                                                                      'type': 'funCall', 'lineNum': 5},
                                  {'id': 6, 'code': '    {', 'type': 'others', 'lineNum': 6},
                                  {'id': 7, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 7},
                                  {'id': 8, 'code': '    }', 'type': 'others', 'lineNum': 8}, {'id': 9,
                                                                                               'code': '    else                                    //If lines are not parallel',
                                                                                               'type': 'others',
                                                                                               'lineNum': 9},
                                  {'id': 10, 'code': '    {', 'type': 'others', 'lineNum': 10},
                                  {'id': 11, 'code': '        c1=((b1-b2)/(a2*b1-a1*b2));           //Computation of',
                                   'type': 'StatementExpression', 'lineNum': 11}, {'id': 12,
                                                                                   'code': '        c2=((a2-a1)/(a2*b1-a1*b2));           //intersection point',
                                                                                   'type': 'StatementExpression',
                                                                                   'lineNum': 12},
                                  {'id': 13, 'code': '        printf("(%.3f,%.3f)",c1,c2);        //Result',
                                   'type': 'funCall', 'lineNum': 13},
                                  {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                                  {'id': 15, 'code': '    return 0;                               //The End',
                                   'type': 'ReturnStatement', 'lineNum': 15},
                                  {'id': 16, 'code': '}', 'type': 'others', 'lineNum': 16}],
     'maxi': [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1],
              [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270162_buggy.c', 'id': 0, 'startLine': 2,
         'endLine': 17, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': 'int main()', 'type': 'Method', 'lineNum': 1},
                  {'id': 2, 'code': '{', 'type': 'others', 'lineNum': 2},
                  {'id': 3, 'code': '    float a1,b1,a2,b2,c1,c2;               //Declaration of the variables',
                   'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);     //For input by user', 'type': 'funCall',
                   'lineNum': 4}, {'id': 5,
                                   'code': '    if(a1/b1==a2/b2||a1==0&&a2==0||b1==0&&b2==0||a1==0&&b1==0||a2==0&&b2==0)                     //If lines are parallel/overlapping',
                                   'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    {', 'type': 'others', 'lineNum': 6},
                  {'id': 7, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 7},
                  {'id': 8, 'code': '    }', 'type': 'others', 'lineNum': 8},
                  {'id': 9, 'code': '    else                                    //If lines are not parallel',
                   'type': 'others', 'lineNum': 9}, {'id': 10, 'code': '    {', 'type': 'others', 'lineNum': 10},
                  {'id': 11, 'code': '        c1=((b1-b2)/(a2*b1-a1*b2));           //Computation of',
                   'type': 'StatementExpression', 'lineNum': 11},
                  {'id': 12, 'code': '        c2=((a2-a1)/(a2*b1-a1*b2));           //intersection point',
                   'type': 'StatementExpression', 'lineNum': 12},
                  {'id': 13, 'code': '        printf("(%.3f,%.3f)",c1,c2);        //Result', 'type': 'funCall',
                   'lineNum': 13}, {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                  {'id': 15, 'code': '    return 0;                               //The End', 'type': 'ReturnStatement',
                   'lineNum': 15}, {'id': 16, 'code': '}', 'type': 'others', 'lineNum': 16}]},
    {'id': 4, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270168_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [14], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                  {'id': 4, 'code': '    float a1,b1,a2,b2;', 'type': 'LocalVariableDeclaration',
                                   'lineNum': 4},
                                  {'id': 5, 'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);', 'type': 'funCall',
                                   'lineNum': 5},
                                  {'id': 6, 'code': '    if((a1*b2-a2*b1)==0)', 'type': 'IfStatement', 'lineNum': 6},
                                  {'id': 7, 'code': '    {', 'type': 'others', 'lineNum': 7},
                                  {'id': 8, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 8},
                                  {'id': 9, 'code': '    }', 'type': 'others', 'lineNum': 9},
                                  {'id': 10, 'code': '    else', 'type': 'others', 'lineNum': 10},
                                  {'id': 11, 'code': '    {', 'type': 'others', 'lineNum': 11},
                                  {'id': 12, 'code': '        float a=(a1-a2)/(a1*b2-a2*b1);',
                                   'type': 'StatementExpression', 'lineNum': 12},
                                  {'id': 13, 'code': '        float b=(b2-b1)/(a1*b2-a2*b1);',
                                   'type': 'StatementExpression', 'lineNum': 13},
                                  {'id': 14, 'code': '        printf("(%.3f,%.3f)",a,b);', 'type': 'funCall',
                                   'lineNum': 14}, {'id': 15, 'code': '    }', 'type': 'others', 'lineNum': 15},
                                  {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                                  {'id': 17, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 17},
                                  {'id': 18, 'code': '}', 'type': 'others', 'lineNum': 18}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270168_buggy.c', 'id': 0, 'startLine': 3,
         'endLine': 19, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a1,b1,a2,b2;', 'type': 'LocalVariableDeclaration', 'lineNum': 4},
                  {'id': 5, 'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    if((a1*b2-a2*b1)==0)', 'type': 'IfStatement', 'lineNum': 6},
                  {'id': 7, 'code': '    {', 'type': 'others', 'lineNum': 7},
                  {'id': 8, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 8},
                  {'id': 9, 'code': '    }', 'type': 'others', 'lineNum': 9},
                  {'id': 10, 'code': '    else', 'type': 'others', 'lineNum': 10},
                  {'id': 11, 'code': '    {', 'type': 'others', 'lineNum': 11},
                  {'id': 12, 'code': '        float a=(a1-a2)/(a1*b2-a2*b1);', 'type': 'StatementExpression',
                   'lineNum': 12},
                  {'id': 13, 'code': '        float b=(b2-b1)/(a1*b2-a2*b1);', 'type': 'StatementExpression',
                   'lineNum': 13},
                  {'id': 14, 'code': '        printf("(%.3f,%.3f)",a,b);', 'type': 'funCall', 'lineNum': 14},
                  {'id': 15, 'code': '    }', 'type': 'others', 'lineNum': 15},
                  {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 17},
                  {'id': 18, 'code': '}', 'type': 'others', 'lineNum': 18}]},
    {'id': 5, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270194_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [14, 17], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                      {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                                      {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                      {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                      {'id': 4, 'code': '    float a1,b1,a2,b2,x,y;',
                                       'type': 'LocalVariableDeclaration', 'lineNum': 4},
                                      {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall',
                                       'lineNum': 5},
                                      {'id': 6, 'code': '    if((a1/b1)==(a2/b2)||((a1/a2)==1 &&(b1/b2)==1))',
                                       'type': 'IfStatement', 'lineNum': 6},
                                      {'id': 7, 'code': '    {', 'type': 'others', 'lineNum': 7},
                                      {'id': 8, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 8},
                                      {'id': 9, 'code': '    }', 'type': 'others', 'lineNum': 9},
                                      {'id': 10, 'code': '    else', 'type': 'others', 'lineNum': 10},
                                      {'id': 11, 'code': '    {', 'type': 'others', 'lineNum': 11},
                                      {'id': 12, 'code': '        x=(b2-b1)/(a1*b2-a2*b1);',
                                       'type': 'StatementExpression', 'lineNum': 12},
                                      {'id': 13, 'code': '    }', 'type': 'others', 'lineNum': 13},
                                      {'id': 14, 'code': '    y=(a2-a1)/(a2*b1-a1*b2);', 'type': 'StatementExpression',
                                       'lineNum': 14}, {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                      {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                                      {'id': 17, 'code': '    printf("(%.3f,%.3f)",x,y);', 'type': 'funCall',
                                       'lineNum': 17},
                                      {'id': 18, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 18},
                                      {'id': 19, 'code': '}', 'type': 'others', 'lineNum': 19}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]],
     'funList': [{'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270194_buggy.c', 'id': 0, 'startLine': 3,
                  'endLine': 20, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a1,b1,a2,b2,x,y;', 'type': 'LocalVariableDeclaration', 'lineNum': 4},
                  {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    if((a1/b1)==(a2/b2)||((a1/a2)==1 &&(b1/b2)==1))', 'type': 'IfStatement',
                   'lineNum': 6}, {'id': 7, 'code': '    {', 'type': 'others', 'lineNum': 7},
                  {'id': 8, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 8},
                  {'id': 9, 'code': '    }', 'type': 'others', 'lineNum': 9},
                  {'id': 10, 'code': '    else', 'type': 'others', 'lineNum': 10},
                  {'id': 11, 'code': '    {', 'type': 'others', 'lineNum': 11},
                  {'id': 12, 'code': '        x=(b2-b1)/(a1*b2-a2*b1);', 'type': 'StatementExpression', 'lineNum': 12},
                  {'id': 13, 'code': '    }', 'type': 'others', 'lineNum': 13},
                  {'id': 14, 'code': '    y=(a2-a1)/(a2*b1-a1*b2);', 'type': 'StatementExpression', 'lineNum': 14},
                  {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                  {'id': 16, 'code': '', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '    printf("(%.3f,%.3f)",x,y);', 'type': 'funCall', 'lineNum': 17},
                  {'id': 18, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 18},
                  {'id': 19, 'code': '}', 'type': 'others', 'lineNum': 19}]},
    {'id': 6, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270201_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [6], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                 {'id': 1, 'code': '#include<float.h>', 'type': 'others', 'lineNum': 1},
                                 {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                 {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                 {'id': 4, 'code': '    float a,b,c,d,m,x,y;', 'type': 'LocalVariableDeclaration',
                                  'lineNum': 4},
                                 {'id': 5, 'code': '    scanf("%f%f%f%f",&a,&b,&c,&d);', 'type': 'funCall',
                                  'lineNum': 5},
                                 {'id': 6, 'code': '    m = (c*b - a*d);', 'type': 'StatementExpression', 'lineNum': 6},
                                 {'id': 7, 'code': '    if (m != 0)', 'type': 'IfStatement', 'lineNum': 7},
                                 {'id': 8, 'code': '    {', 'type': 'others', 'lineNum': 8},
                                 {'id': 9, 'code': '        x = (d-b)/m;', 'type': 'StatementExpression', 'lineNum': 9},
                                 {'id': 10, 'code': '        y = (a-c)/m;', 'type': 'StatementExpression',
                                  'lineNum': 10},
                                 {'id': 11, 'code': '        printf("(%.3f,%.3f)",x,y);', 'type': 'funCall',
                                  'lineNum': 11}, {'id': 12, 'code': '    }', 'type': 'others', 'lineNum': 12},
                                 {'id': 13, 'code': '    else', 'type': 'others', 'lineNum': 13},
                                 {'id': 14, 'code': '    {', 'type': 'others', 'lineNum': 14},
                                 {'id': 15, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 15},
                                 {'id': 16, 'code': '    }', 'type': 'others', 'lineNum': 16},
                                 {'id': 17, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 17},
                                 {'id': 18, 'code': '}', 'type': 'others', 'lineNum': 18}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1],
              [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270201_buggy.c', 'id': 0, 'startLine': 3,
         'endLine': 19, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '#include<float.h>', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a,b,c,d,m,x,y;', 'type': 'LocalVariableDeclaration', 'lineNum': 4},
                  {'id': 5, 'code': '    scanf("%f%f%f%f",&a,&b,&c,&d);', 'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    m = (c*b - a*d);', 'type': 'StatementExpression', 'lineNum': 6},
                  {'id': 7, 'code': '    if (m != 0)', 'type': 'IfStatement', 'lineNum': 7},
                  {'id': 8, 'code': '    {', 'type': 'others', 'lineNum': 8},
                  {'id': 9, 'code': '        x = (d-b)/m;', 'type': 'StatementExpression', 'lineNum': 9},
                  {'id': 10, 'code': '        y = (a-c)/m;', 'type': 'StatementExpression', 'lineNum': 10},
                  {'id': 11, 'code': '        printf("(%.3f,%.3f)",x,y);', 'type': 'funCall', 'lineNum': 11},
                  {'id': 12, 'code': '    }', 'type': 'others', 'lineNum': 12},
                  {'id': 13, 'code': '    else', 'type': 'others', 'lineNum': 13},
                  {'id': 14, 'code': '    {', 'type': 'others', 'lineNum': 14},
                  {'id': 15, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 15},
                  {'id': 16, 'code': '    }', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 17},
                  {'id': 18, 'code': '}', 'type': 'others', 'lineNum': 18}]},
    {'id': 7, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270211_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [7, 8], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                    {'id': 1, 'code': 'int main()', 'type': 'Method', 'lineNum': 1},
                                    {'id': 2, 'code': '{', 'type': 'others', 'lineNum': 2},
                                    {'id': 3, 'code': '    float a1,b1,a2,b2,x,y;', 'type': 'LocalVariableDeclaration',
                                     'lineNum': 3},
                                    {'id': 4, 'code': '    scanf("%f %f %f %f", &a1,&b1,&a2,&b2);', 'type': 'funCall',
                                     'lineNum': 4},
                                    {'id': 5, 'code': '    if (((a1*b2)-(b1*a2))!=0)', 'type': 'IfStatement',
                                     'lineNum': 5}, {'id': 6, 'code': '    {', 'type': 'others', 'lineNum': 6},
                                    {'id': 7, 'code': '        x=((b2-b1)/((a2*b1)-(a1*b2)));',
                                     'type': 'StatementExpression', 'lineNum': 7},
                                    {'id': 8, 'code': '        y=((a2-a1)/((a1*b2)-(b1*a2)));',
                                     'type': 'StatementExpression', 'lineNum': 8},
                                    {'id': 9, 'code': '        printf("(%.3f,%.3f)",x,y);', 'type': 'funCall',
                                     'lineNum': 9}, {'id': 10, 'code': '    }', 'type': 'others', 'lineNum': 10},
                                    {'id': 11, 'code': '    else', 'type': 'others', 'lineNum': 11},
                                    {'id': 12, 'code': '    {', 'type': 'others', 'lineNum': 12},
                                    {'id': 13, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 13},
                                    {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                                    {'id': 15, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 15},
                                    {'id': 16, 'code': '}', 'type': 'others', 'lineNum': 16}],
     'maxi': [[0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1],
              [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270211_buggy.c', 'id': 0, 'startLine': 2,
         'endLine': 17, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': 'int main()', 'type': 'Method', 'lineNum': 1},
                  {'id': 2, 'code': '{', 'type': 'others', 'lineNum': 2},
                  {'id': 3, 'code': '    float a1,b1,a2,b2,x,y;', 'type': 'LocalVariableDeclaration', 'lineNum': 3},
                  {'id': 4, 'code': '    scanf("%f %f %f %f", &a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 4},
                  {'id': 5, 'code': '    if (((a1*b2)-(b1*a2))!=0)', 'type': 'IfStatement', 'lineNum': 5},
                  {'id': 6, 'code': '    {', 'type': 'others', 'lineNum': 6},
                  {'id': 7, 'code': '        x=((b2-b1)/((a2*b1)-(a1*b2)));', 'type': 'StatementExpression',
                   'lineNum': 7},
                  {'id': 8, 'code': '        y=((a2-a1)/((a1*b2)-(b1*a2)));', 'type': 'StatementExpression',
                   'lineNum': 8},
                  {'id': 9, 'code': '        printf("(%.3f,%.3f)",x,y);', 'type': 'funCall', 'lineNum': 9},
                  {'id': 10, 'code': '    }', 'type': 'others', 'lineNum': 10},
                  {'id': 11, 'code': '    else', 'type': 'others', 'lineNum': 11},
                  {'id': 12, 'code': '    {', 'type': 'others', 'lineNum': 12},
                  {'id': 13, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 13},
                  {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                  {'id': 15, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 15},
                  {'id': 16, 'code': '}', 'type': 'others', 'lineNum': 16}]},
    {'id': 8, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270220_buggy.c', 'result': [0, 0, 0, 0, 0, 0],
     'errLines': [6, 7, 8], 'lineId': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                                       {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                                       {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                                       {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                                       {'id': 4, 'code': '    float a1,b1,a2,b2,p,q,t,r,s;',
                                        'type': 'LocalVariableDeclaration', 'lineNum': 4},
                                       {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall',
                                        'lineNum': 5},
                                       {'id': 6, 'code': '    p=a2*b1-a1*b2;', 'type': 'StatementExpression',
                                        'lineNum': 6},
                                       {'id': 7, 'code': '    q=b1-b2;', 'type': 'StatementExpression', 'lineNum': 7},
                                       {'id': 8, 'code': '    t=a2-a1;', 'type': 'StatementExpression', 'lineNum': 8},
                                       {'id': 9, 'code': '    r=t/p;', 'type': 'StatementExpression', 'lineNum': 9},
                                       {'id': 10, 'code': '    s=q/p;', 'type': 'StatementExpression', 'lineNum': 10},
                                       {'id': 11, 'code': '    if(p==0)', 'type': 'IfStatement', 'lineNum': 11},
                                       {'id': 12, 'code': '    {', 'type': 'others', 'lineNum': 12},
                                       {'id': 13, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 13},
                                       {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                                       {'id': 15, 'code': '    else', 'type': 'others', 'lineNum': 15},
                                       {'id': 16, 'code': '    {', 'type': 'others', 'lineNum': 16},
                                       {'id': 17, 'code': '        printf("(%.3f,%.3f)",s,r);', 'type': 'funCall',
                                        'lineNum': 17}, {'id': 18, 'code': '    }', 'type': 'others', 'lineNum': 18},
                                       {'id': 19, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 19},
                                       {'id': 20, 'code': '}', 'type': 'others', 'lineNum': 20}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270220_buggy.c', 'id': 0, 'startLine': 3,
         'endLine': 21, 'name': 'int main()'}],
     'codeList': [{'id': 0, 'code': '#include<stdio.h>', 'type': 'others', 'lineNum': 0},
                  {'id': 1, 'code': '', 'type': 'others', 'lineNum': 1},
                  {'id': 2, 'code': 'int main()', 'type': 'Method', 'lineNum': 2},
                  {'id': 3, 'code': '{', 'type': 'others', 'lineNum': 3},
                  {'id': 4, 'code': '    float a1,b1,a2,b2,p,q,t,r,s;', 'type': 'LocalVariableDeclaration',
                   'lineNum': 4},
                  {'id': 5, 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);', 'type': 'funCall', 'lineNum': 5},
                  {'id': 6, 'code': '    p=a2*b1-a1*b2;', 'type': 'StatementExpression', 'lineNum': 6},
                  {'id': 7, 'code': '    q=b1-b2;', 'type': 'StatementExpression', 'lineNum': 7},
                  {'id': 8, 'code': '    t=a2-a1;', 'type': 'StatementExpression', 'lineNum': 8},
                  {'id': 9, 'code': '    r=t/p;', 'type': 'StatementExpression', 'lineNum': 9},
                  {'id': 10, 'code': '    s=q/p;', 'type': 'StatementExpression', 'lineNum': 10},
                  {'id': 11, 'code': '    if(p==0)', 'type': 'IfStatement', 'lineNum': 11},
                  {'id': 12, 'code': '    {', 'type': 'others', 'lineNum': 12},
                  {'id': 13, 'code': '        printf("INF");', 'type': 'funCall', 'lineNum': 13},
                  {'id': 14, 'code': '    }', 'type': 'others', 'lineNum': 14},
                  {'id': 15, 'code': '    else', 'type': 'others', 'lineNum': 15},
                  {'id': 16, 'code': '    {', 'type': 'others', 'lineNum': 16},
                  {'id': 17, 'code': '        printf("(%.3f,%.3f)",s,r);', 'type': 'funCall', 'lineNum': 17},
                  {'id': 18, 'code': '    }', 'type': 'others', 'lineNum': 18},
                  {'id': 19, 'code': '    return 0;', 'type': 'ReturnStatement', 'lineNum': 19},
                  {'id': 20, 'code': '}', 'type': 'others', 'lineNum': 20}]},
    {'id': 9, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270138_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2,X,Y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19,
                                                               'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    if ((a1*b2-a2*b1==0))',
                                                               'type': 'IfStatement', 'lineNum': 20},
                                                              {'id': 21, 'code': '    {', 'type': 'others',
                                                               'lineNum': 21},
                                                              {'id': 22, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 22},
                                                              {'id': 23, 'code': '    }', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '    else', 'type': 'others',
                                                               'lineNum': 24},
                                                              {'id': 25, 'code': '    {', 'type': 'others',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '        Y=(a2-a1)/(a2*b1-b2*a1);',
                                                               'type': 'StatementExpression', 'lineNum': 26},
                                                              {'id': 27, 'code': '        X=(b2-b1)/(b2*a1-b1*a2);',
                                                               'type': 'StatementExpression', 'lineNum': 27},
                                                              {'id': 28, 'code': '        printf("(%.3f,%.3f)",X,Y);',
                                                               'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29},
                                                              {'id': 30, 'code': '', 'type': 'others', 'lineNum': 30},
                                                              {'id': 31, 'code': '', 'type': 'others', 'lineNum': 31},
                                                              {'id': 32, 'code': '    return 0;',
                                                               'type': 'ReturnStatement', 'lineNum': 32},
                                                              {'id': 33, 'code': '}', 'type': 'others', 'lineNum': 33}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270138_correct.c', 'id': 0, 'startLine': 4,
         'endLine': 21, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                             {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                              'lineNum': 14},
                                                             {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                             {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                              'lineNum': 16},
                                                             {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                             {'id': 18, 'code': '    float a1,b1,a2,b2,X,Y;',
                                                              'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                             {'id': 19,
                                                              'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                              'type': 'funCall', 'lineNum': 19},
                                                             {'id': 20, 'code': '    if ((a1*b2-a2*b1==0))',
                                                              'type': 'IfStatement', 'lineNum': 20},
                                                             {'id': 21, 'code': '    {', 'type': 'others',
                                                              'lineNum': 21},
                                                             {'id': 22, 'code': '        printf("INF");',
                                                              'type': 'funCall', 'lineNum': 22},
                                                             {'id': 23, 'code': '    }', 'type': 'others',
                                                              'lineNum': 23},
                                                             {'id': 24, 'code': '    else', 'type': 'others',
                                                              'lineNum': 24},
                                                             {'id': 25, 'code': '    {', 'type': 'others',
                                                              'lineNum': 25},
                                                             {'id': 26, 'code': '        Y=(a2-a1)/(a2*b1-b2*a1);',
                                                              'type': 'StatementExpression', 'lineNum': 26},
                                                             {'id': 27, 'code': '        X=(b2-b1)/(b2*a1-b1*a2);',
                                                              'type': 'StatementExpression', 'lineNum': 27},
                                                             {'id': 28, 'code': '        printf("(%.3f,%.3f)",X,Y);',
                                                              'type': 'funCall', 'lineNum': 28},
                                                             {'id': 29, 'code': '    }', 'type': 'others',
                                                              'lineNum': 29},
                                                             {'id': 30, 'code': '', 'type': 'others', 'lineNum': 30},
                                                             {'id': 31, 'code': '', 'type': 'others', 'lineNum': 31},
                                                             {'id': 32, 'code': '    return 0;',
                                                              'type': 'ReturnStatement', 'lineNum': 32},
                                                             {'id': 33, 'code': '}', 'type': 'others', 'lineNum': 33}]},
    {'id': 10, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270142_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18,
                                                               'code': '    float a,b,c,d,x,y; //variable declaration',
                                                               'type': 'others', 'lineNum': 18},
                                                              {'id': 19, 'code': '    scanf("%f%f%f%f",&a,&b,&c,&d);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    x=(d-b)/(a*d-b*c);',
                                                               'type': 'StatementExpression', 'lineNum': 20}, {'id': 21,
                                                                                                               'code': '    y=(a*d-b*c-d*c+b*c)/(a*d*d-b*c*d);',
                                                                                                               'type': 'StatementExpression',
                                                                                                               'lineNum': 21},
                                                              {'id': 22,
                                                               'code': '    if((a*d-b*c)==0 || (a*d*d-b*c*d)==0)',
                                                               'type': 'IfStatement', 'lineNum': 22},
                                                              {'id': 23, 'code': '    {', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 24},
                                                              {'id': 25, 'code': '    }', 'type': 'others',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '    else', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    {', 'type': 'others',
                                                               'lineNum': 27},
                                                              {'id': 28, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                               'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29}, {'id': 30, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 30},
                                                              {'id': 31, 'code': '}', 'type': 'others', 'lineNum': 31}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270142_correct.c', 'id': 0, 'startLine': 4,
         'endLine': 19, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                             {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                              'lineNum': 14},
                                                             {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                             {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                              'lineNum': 16},
                                                             {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                             {'id': 18,
                                                              'code': '    float a,b,c,d,x,y; //variable declaration',
                                                              'type': 'others', 'lineNum': 18},
                                                             {'id': 19, 'code': '    scanf("%f%f%f%f",&a,&b,&c,&d);',
                                                              'type': 'funCall', 'lineNum': 19},
                                                             {'id': 20, 'code': '    x=(d-b)/(a*d-b*c);',
                                                              'type': 'StatementExpression', 'lineNum': 20}, {'id': 21,
                                                                                                              'code': '    y=(a*d-b*c-d*c+b*c)/(a*d*d-b*c*d);',
                                                                                                              'type': 'StatementExpression',
                                                                                                              'lineNum': 21},
                                                             {'id': 22,
                                                              'code': '    if((a*d-b*c)==0 || (a*d*d-b*c*d)==0)',
                                                              'type': 'IfStatement', 'lineNum': 22},
                                                             {'id': 23, 'code': '    {', 'type': 'others',
                                                              'lineNum': 23},
                                                             {'id': 24, 'code': '        printf("INF");',
                                                              'type': 'funCall', 'lineNum': 24},
                                                             {'id': 25, 'code': '    }', 'type': 'others',
                                                              'lineNum': 25},
                                                             {'id': 26, 'code': '    else', 'type': 'others',
                                                              'lineNum': 26},
                                                             {'id': 27, 'code': '    {', 'type': 'others',
                                                              'lineNum': 27},
                                                             {'id': 28, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                              'type': 'funCall', 'lineNum': 28},
                                                             {'id': 29, 'code': '    }', 'type': 'others',
                                                              'lineNum': 29}, {'id': 30, 'code': '    return 0;',
                                                                               'type': 'ReturnStatement',
                                                                               'lineNum': 30},
                                                             {'id': 31, 'code': '}', 'type': 'others', 'lineNum': 31}]},
    {'id': 11, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270150_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19, 'code': '    float X,Y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 19},
                                                              {'id': 20,
                                                               'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 20},
                                                              {'id': 21, 'code': '    if(a1*b2-a2*b1 != 0)',
                                                               'type': 'IfStatement', 'lineNum': 21},
                                                              {'id': 22, 'code': '    {', 'type': 'others',
                                                               'lineNum': 22},
                                                              {'id': 23, 'code': '        X=(b2-b1)/(a1*b2-a2*b1);',
                                                               'type': 'StatementExpression', 'lineNum': 23},
                                                              {'id': 24, 'code': '        Y=(a1-a2)/(a1*b2-a2*b1);',
                                                               'type': 'StatementExpression', 'lineNum': 24},
                                                              {'id': 25, 'code': '        printf("(%.3f,%.3f)",X,Y);',
                                                               'type': 'funCall', 'lineNum': 25},
                                                              {'id': 26, 'code': '    }', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    else', 'type': 'others',
                                                               'lineNum': 27},
                                                              {'id': 28, 'code': '    {', 'type': 'others',
                                                               'lineNum': 28},
                                                              {'id': 29, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 29},
                                                              {'id': 30, 'code': '    }', 'type': 'others',
                                                               'lineNum': 30}, {'id': 31, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others', 'lineNum': 32}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]],
     'funList': [
         {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270150_correct.c', 'id': 0, 'startLine': 4,
          'endLine': 20, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19, 'code': '    float X,Y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 19},
                                                              {'id': 20,
                                                               'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 20},
                                                              {'id': 21, 'code': '    if(a1*b2-a2*b1 != 0)',
                                                               'type': 'IfStatement', 'lineNum': 21},
                                                              {'id': 22, 'code': '    {', 'type': 'others',
                                                               'lineNum': 22},
                                                              {'id': 23, 'code': '        X=(b2-b1)/(a1*b2-a2*b1);',
                                                               'type': 'StatementExpression', 'lineNum': 23},
                                                              {'id': 24, 'code': '        Y=(a1-a2)/(a1*b2-a2*b1);',
                                                               'type': 'StatementExpression', 'lineNum': 24},
                                                              {'id': 25, 'code': '        printf("(%.3f,%.3f)",X,Y);',
                                                               'type': 'funCall', 'lineNum': 25},
                                                              {'id': 26, 'code': '    }', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    else', 'type': 'others',
                                                               'lineNum': 27},
                                                              {'id': 28, 'code': '    {', 'type': 'others',
                                                               'lineNum': 28},
                                                              {'id': 29, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 29},
                                                              {'id': 30, 'code': '    }', 'type': 'others',
                                                               'lineNum': 30}, {'id': 31, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others',
                                                               'lineNum': 32}]},
    {'id': 12, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270151_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2; ',
                                                               'type': 'others', 'lineNum': 18}, {'id': 19,
                                                                                                  'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                                                                  'type': 'funCall',
                                                                                                  'lineNum': 19},
                                                              {'id': 20, 'code': '    float X=(b2-b1)/((b2*a1-b1*a2));',
                                                               'type': 'StatementExpression', 'lineNum': 20}, {'id': 21,
                                                                                                               'code': '    float Y=(a2-a1)/((b1*a2)-(a1*b2));',
                                                                                                               'type': 'StatementExpression',
                                                                                                               'lineNum': 21},
                                                              {'id': 22, 'code': '    if (a1*b2==b1*a2)        ',
                                                               'type': 'IfStatement', 'lineNum': 22},
                                                              {'id': 23, 'code': '    {', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '        printf("INF");   ',
                                                               'type': 'funCall', 'lineNum': 24},
                                                              {'id': 25, 'code': '    }', 'type': 'others',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '    else', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    {', 'type': 'others',
                                                               'lineNum': 27}, {'id': 28,
                                                                                'code': '        printf("(%.3f,%.3f)",X,Y);   ',
                                                                                'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29},
                                                              {'id': 30, 'code': '', 'type': 'others', 'lineNum': 30},
                                                              {'id': 31, 'code': '    return 0;',
                                                               'type': 'ReturnStatement', 'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others', 'lineNum': 32}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1],
              [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]],
     'funList': [
         {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270151_correct.c', 'id': 0, 'startLine': 4,
          'endLine': 20, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2; ',
                                                               'type': 'others', 'lineNum': 18}, {'id': 19,
                                                                                                  'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                                                                  'type': 'funCall',
                                                                                                  'lineNum': 19},
                                                              {'id': 20, 'code': '    float X=(b2-b1)/((b2*a1-b1*a2));',
                                                               'type': 'StatementExpression', 'lineNum': 20}, {'id': 21,
                                                                                                               'code': '    float Y=(a2-a1)/((b1*a2)-(a1*b2));',
                                                                                                               'type': 'StatementExpression',
                                                                                                               'lineNum': 21},
                                                              {'id': 22, 'code': '    if (a1*b2==b1*a2)        ',
                                                               'type': 'IfStatement', 'lineNum': 22},
                                                              {'id': 23, 'code': '    {', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '        printf("INF");   ',
                                                               'type': 'funCall', 'lineNum': 24},
                                                              {'id': 25, 'code': '    }', 'type': 'others',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '    else', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    {', 'type': 'others',
                                                               'lineNum': 27}, {'id': 28,
                                                                                'code': '        printf("(%.3f,%.3f)",X,Y);   ',
                                                                                'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29},
                                                              {'id': 30, 'code': '', 'type': 'others', 'lineNum': 30},
                                                              {'id': 31, 'code': '    return 0;',
                                                               'type': 'ReturnStatement', 'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others',
                                                               'lineNum': 32}]},
    {'id': 13, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270162_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 15},
                                                              {'id': 16, 'code': '{', 'type': 'others', 'lineNum': 16},
                                                              {'id': 17,
                                                               'code': '    float a1,b1,a2,b2,c1,c2;               //Declaration of the variables',
                                                               'type': 'others', 'lineNum': 17}, {'id': 18,
                                                                                                  'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);     //For input by user',
                                                                                                  'type': 'funCall',
                                                                                                  'lineNum': 18},
                                                              {'id': 19,
                                                               'code': '    if(a1/b1==a2/b2||a1==0&&a2==0||b1==0&&b2==0||a1==0&&b1==0||a2==0&&b2==0)                     //If lines are parallel/overlapping',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    {', 'type': 'others',
                                                               'lineNum': 20},
                                                              {'id': 21, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 21},
                                                              {'id': 22, 'code': '    }', 'type': 'others',
                                                               'lineNum': 22}, {'id': 23,
                                                                                'code': '    else                                    //If lines are not parallel',
                                                                                'type': 'others', 'lineNum': 23},
                                                              {'id': 24, 'code': '    {', 'type': 'others',
                                                               'lineNum': 24}, {'id': 25,
                                                                                'code': '        c1=((b2-b1)/(a1*b2-a2*b1));           //Computation of',
                                                                                'type': 'StatementExpression',
                                                                                'lineNum': 25}, {'id': 26,
                                                                                                 'code': '        c2=((a2-a1)/(a2*b1-a1*b2));           //intersection point',
                                                                                                 'type': 'StatementExpression',
                                                                                                 'lineNum': 26},
                                                              {'id': 27,
                                                               'code': '        printf("(%.3f,%.3f)",c1,c2);        //Result',
                                                               'type': 'funCall', 'lineNum': 27},
                                                              {'id': 28, 'code': '    }', 'type': 'others',
                                                               'lineNum': 28}, {'id': 29,
                                                                                'code': '    return 0;                               //The End',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 29},
                                                              {'id': 30, 'code': '}', 'type': 'others', 'lineNum': 30}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270162_correct.c', 'id': 0, 'startLine': 3,
         'endLine': 18, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                             {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                              'lineNum': 14},
                                                             {'id': 15, 'code': 'int main()', 'type': 'Method',
                                                              'lineNum': 15},
                                                             {'id': 16, 'code': '{', 'type': 'others', 'lineNum': 16},
                                                             {'id': 17,
                                                              'code': '    float a1,b1,a2,b2,c1,c2;               //Declaration of the variables',
                                                              'type': 'others', 'lineNum': 17}, {'id': 18,
                                                                                                 'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);     //For input by user',
                                                                                                 'type': 'funCall',
                                                                                                 'lineNum': 18},
                                                             {'id': 19,
                                                              'code': '    if(a1/b1==a2/b2||a1==0&&a2==0||b1==0&&b2==0||a1==0&&b1==0||a2==0&&b2==0)                     //If lines are parallel/overlapping',
                                                              'type': 'funCall', 'lineNum': 19},
                                                             {'id': 20, 'code': '    {', 'type': 'others',
                                                              'lineNum': 20},
                                                             {'id': 21, 'code': '        printf("INF");',
                                                              'type': 'funCall', 'lineNum': 21},
                                                             {'id': 22, 'code': '    }', 'type': 'others',
                                                              'lineNum': 22}, {'id': 23,
                                                                               'code': '    else                                    //If lines are not parallel',
                                                                               'type': 'others', 'lineNum': 23},
                                                             {'id': 24, 'code': '    {', 'type': 'others',
                                                              'lineNum': 24}, {'id': 25,
                                                                               'code': '        c1=((b2-b1)/(a1*b2-a2*b1));           //Computation of',
                                                                               'type': 'StatementExpression',
                                                                               'lineNum': 25}, {'id': 26,
                                                                                                'code': '        c2=((a2-a1)/(a2*b1-a1*b2));           //intersection point',
                                                                                                'type': 'StatementExpression',
                                                                                                'lineNum': 26},
                                                             {'id': 27,
                                                              'code': '        printf("(%.3f,%.3f)",c1,c2);        //Result',
                                                              'type': 'funCall', 'lineNum': 27},
                                                             {'id': 28, 'code': '    }', 'type': 'others',
                                                              'lineNum': 28}, {'id': 29,
                                                                               'code': '    return 0;                               //The End',
                                                                               'type': 'ReturnStatement',
                                                                               'lineNum': 29},
                                                             {'id': 30, 'code': '}', 'type': 'others', 'lineNum': 30}]},
    {'id': 14, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270168_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19,
                                                               'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    if((a1*b2-a2*b1)==0)',
                                                               'type': 'IfStatement', 'lineNum': 20},
                                                              {'id': 21, 'code': '    {', 'type': 'others',
                                                               'lineNum': 21},
                                                              {'id': 22, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 22},
                                                              {'id': 23, 'code': '    }', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '    else', 'type': 'others',
                                                               'lineNum': 24},
                                                              {'id': 25, 'code': '    {', 'type': 'others',
                                                               'lineNum': 25}, {'id': 26,
                                                                                'code': '        float a=(a1-a2)/(a1*b2-a2*b1);',
                                                                                'type': 'StatementExpression',
                                                                                'lineNum': 26}, {'id': 27,
                                                                                                 'code': '        float b=(b2-b1)/(a1*b2-a2*b1);',
                                                                                                 'type': 'StatementExpression',
                                                                                                 'lineNum': 27},
                                                              {'id': 28, 'code': '        printf("(%.3f,%.3f)",b,a);',
                                                               'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29},
                                                              {'id': 30, 'code': '', 'type': 'others', 'lineNum': 30},
                                                              {'id': 31, 'code': '    return 0;',
                                                               'type': 'ReturnStatement', 'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others', 'lineNum': 32}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]],
     'funList': [
         {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270168_correct.c', 'id': 0, 'startLine': 4,
          'endLine': 20, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19,
                                                               'code': '    scanf("%f %f %f %f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    if((a1*b2-a2*b1)==0)',
                                                               'type': 'IfStatement', 'lineNum': 20},
                                                              {'id': 21, 'code': '    {', 'type': 'others',
                                                               'lineNum': 21},
                                                              {'id': 22, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 22},
                                                              {'id': 23, 'code': '    }', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '    else', 'type': 'others',
                                                               'lineNum': 24},
                                                              {'id': 25, 'code': '    {', 'type': 'others',
                                                               'lineNum': 25}, {'id': 26,
                                                                                'code': '        float a=(a1-a2)/(a1*b2-a2*b1);',
                                                                                'type': 'StatementExpression',
                                                                                'lineNum': 26}, {'id': 27,
                                                                                                 'code': '        float b=(b2-b1)/(a1*b2-a2*b1);',
                                                                                                 'type': 'StatementExpression',
                                                                                                 'lineNum': 27},
                                                              {'id': 28, 'code': '        printf("(%.3f,%.3f)",b,a);',
                                                               'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29},
                                                              {'id': 30, 'code': '', 'type': 'others', 'lineNum': 30},
                                                              {'id': 31, 'code': '    return 0;',
                                                               'type': 'ReturnStatement', 'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others',
                                                               'lineNum': 32}]},
    {'id': 15, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270194_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2,x,y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19,
                                                               'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 19}, {'id': 20,
                                                                                                   'code': '    if((a1/b1)==(a2/b2)||((a1/a2)==1 &&(b1/b2)==1))',
                                                                                                   'type': 'IfStatement',
                                                                                                   'lineNum': 20},
                                                              {'id': 21, 'code': '    {', 'type': 'others',
                                                               'lineNum': 21},
                                                              {'id': 22, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 22},
                                                              {'id': 23, 'code': '    }', 'type': 'others',
                                                               'lineNum': 23},
                                                              {'id': 24, 'code': '    else', 'type': 'others',
                                                               'lineNum': 24},
                                                              {'id': 25, 'code': '    {', 'type': 'others',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '        x=(b2-b1)/(a1*b2-a2*b1);',
                                                               'type': 'StatementExpression', 'lineNum': 26},
                                                              {'id': 27, 'code': '        y=(a2-a1)/(a2*b1-a1*b2);',
                                                               'type': 'StatementExpression', 'lineNum': 27},
                                                              {'id': 28, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                               'type': 'funCall', 'lineNum': 28},
                                                              {'id': 29, 'code': '    }', 'type': 'others',
                                                               'lineNum': 29}, {'id': 30, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 30},
                                                              {'id': 31, 'code': '}', 'type': 'others', 'lineNum': 31}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270194_correct.c', 'id': 0, 'startLine': 4,
         'endLine': 19, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                             {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                              'lineNum': 14},
                                                             {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                             {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                              'lineNum': 16},
                                                             {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                             {'id': 18, 'code': '    float a1,b1,a2,b2,x,y;',
                                                              'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                             {'id': 19,
                                                              'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                              'type': 'funCall', 'lineNum': 19}, {'id': 20,
                                                                                                  'code': '    if((a1/b1)==(a2/b2)||((a1/a2)==1 &&(b1/b2)==1))',
                                                                                                  'type': 'IfStatement',
                                                                                                  'lineNum': 20},
                                                             {'id': 21, 'code': '    {', 'type': 'others',
                                                              'lineNum': 21},
                                                             {'id': 22, 'code': '        printf("INF");',
                                                              'type': 'funCall', 'lineNum': 22},
                                                             {'id': 23, 'code': '    }', 'type': 'others',
                                                              'lineNum': 23},
                                                             {'id': 24, 'code': '    else', 'type': 'others',
                                                              'lineNum': 24},
                                                             {'id': 25, 'code': '    {', 'type': 'others',
                                                              'lineNum': 25},
                                                             {'id': 26, 'code': '        x=(b2-b1)/(a1*b2-a2*b1);',
                                                              'type': 'StatementExpression', 'lineNum': 26},
                                                             {'id': 27, 'code': '        y=(a2-a1)/(a2*b1-a1*b2);',
                                                              'type': 'StatementExpression', 'lineNum': 27},
                                                             {'id': 28, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                              'type': 'funCall', 'lineNum': 28},
                                                             {'id': 29, 'code': '    }', 'type': 'others',
                                                              'lineNum': 29}, {'id': 30, 'code': '    return 0;',
                                                                               'type': 'ReturnStatement',
                                                                               'lineNum': 30},
                                                             {'id': 31, 'code': '}', 'type': 'others', 'lineNum': 31}]},
    {'id': 16, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270201_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '#include<float.h>', 'type': 'others',
                                                               'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a,b,c,d,m,x,y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19, 'code': '    scanf("%f%f%f%f",&a,&b,&c,&d);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    m = (a*d - b*c);',
                                                               'type': 'StatementExpression', 'lineNum': 20},
                                                              {'id': 21, 'code': '    if (m != 0)',
                                                               'type': 'IfStatement', 'lineNum': 21},
                                                              {'id': 22, 'code': '    {', 'type': 'others',
                                                               'lineNum': 22},
                                                              {'id': 23, 'code': '        x = (d-b)/m;',
                                                               'type': 'StatementExpression', 'lineNum': 23},
                                                              {'id': 24, 'code': '        y = (a-c)/m;',
                                                               'type': 'StatementExpression', 'lineNum': 24},
                                                              {'id': 25, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                               'type': 'funCall', 'lineNum': 25},
                                                              {'id': 26, 'code': '    }', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    else', 'type': 'others',
                                                               'lineNum': 27},
                                                              {'id': 28, 'code': '    {', 'type': 'others',
                                                               'lineNum': 28},
                                                              {'id': 29, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 29},
                                                              {'id': 30, 'code': '    }', 'type': 'others',
                                                               'lineNum': 30}, {'id': 31, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others', 'lineNum': 32}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]],
     'funList': [
         {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270201_correct.c', 'id': 0, 'startLine': 4,
          'endLine': 20, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '#include<float.h>', 'type': 'others',
                                                               'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a,b,c,d,m,x,y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19, 'code': '    scanf("%f%f%f%f",&a,&b,&c,&d);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    m = (a*d - b*c);',
                                                               'type': 'StatementExpression', 'lineNum': 20},
                                                              {'id': 21, 'code': '    if (m != 0)',
                                                               'type': 'IfStatement', 'lineNum': 21},
                                                              {'id': 22, 'code': '    {', 'type': 'others',
                                                               'lineNum': 22},
                                                              {'id': 23, 'code': '        x = (d-b)/m;',
                                                               'type': 'StatementExpression', 'lineNum': 23},
                                                              {'id': 24, 'code': '        y = (a-c)/m;',
                                                               'type': 'StatementExpression', 'lineNum': 24},
                                                              {'id': 25, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                               'type': 'funCall', 'lineNum': 25},
                                                              {'id': 26, 'code': '    }', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '    else', 'type': 'others',
                                                               'lineNum': 27},
                                                              {'id': 28, 'code': '    {', 'type': 'others',
                                                               'lineNum': 28},
                                                              {'id': 29, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 29},
                                                              {'id': 30, 'code': '    }', 'type': 'others',
                                                               'lineNum': 30}, {'id': 31, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 31},
                                                              {'id': 32, 'code': '}', 'type': 'others',
                                                               'lineNum': 32}]},
    {'id': 17, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270211_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 15},
                                                              {'id': 16, 'code': '{', 'type': 'others', 'lineNum': 16},
                                                              {'id': 17, 'code': '    float a1,b1,a2,b2,x,y;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 17},
                                                              {'id': 18,
                                                               'code': '    scanf("%f %f %f %f", &a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 18},
                                                              {'id': 19, 'code': '    if (((a1*b2)-(b1*a2))!=0)',
                                                               'type': 'IfStatement', 'lineNum': 19},
                                                              {'id': 20, 'code': '    {', 'type': 'others',
                                                               'lineNum': 20}, {'id': 21,
                                                                                'code': '        x=((b2-b1)/((a1*b2)-(a2*b1)));',
                                                                                'type': 'StatementExpression',
                                                                                'lineNum': 21}, {'id': 22,
                                                                                                 'code': '        y=((a2-a1)/((a2*b1)-(b2*a1)));',
                                                                                                 'type': 'StatementExpression',
                                                                                                 'lineNum': 22},
                                                              {'id': 23, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                               'type': 'funCall', 'lineNum': 23},
                                                              {'id': 24, 'code': '    }', 'type': 'others',
                                                               'lineNum': 24},
                                                              {'id': 25, 'code': '    else', 'type': 'others',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '    {', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 27},
                                                              {'id': 28, 'code': '    }', 'type': 'others',
                                                               'lineNum': 28}, {'id': 29, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 29},
                                                              {'id': 30, 'code': '}', 'type': 'others', 'lineNum': 30}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 1],
              [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270211_correct.c', 'id': 0, 'startLine': 3,
         'endLine': 18, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                             {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                              'lineNum': 14},
                                                             {'id': 15, 'code': 'int main()', 'type': 'Method',
                                                              'lineNum': 15},
                                                             {'id': 16, 'code': '{', 'type': 'others', 'lineNum': 16},
                                                             {'id': 17, 'code': '    float a1,b1,a2,b2,x,y;',
                                                              'type': 'LocalVariableDeclaration', 'lineNum': 17},
                                                             {'id': 18,
                                                              'code': '    scanf("%f %f %f %f", &a1,&b1,&a2,&b2);',
                                                              'type': 'funCall', 'lineNum': 18},
                                                             {'id': 19, 'code': '    if (((a1*b2)-(b1*a2))!=0)',
                                                              'type': 'IfStatement', 'lineNum': 19},
                                                             {'id': 20, 'code': '    {', 'type': 'others',
                                                              'lineNum': 20}, {'id': 21,
                                                                               'code': '        x=((b2-b1)/((a1*b2)-(a2*b1)));',
                                                                               'type': 'StatementExpression',
                                                                               'lineNum': 21}, {'id': 22,
                                                                                                'code': '        y=((a2-a1)/((a2*b1)-(b2*a1)));',
                                                                                                'type': 'StatementExpression',
                                                                                                'lineNum': 22},
                                                             {'id': 23, 'code': '        printf("(%.3f,%.3f)",x,y);',
                                                              'type': 'funCall', 'lineNum': 23},
                                                             {'id': 24, 'code': '    }', 'type': 'others',
                                                              'lineNum': 24},
                                                             {'id': 25, 'code': '    else', 'type': 'others',
                                                              'lineNum': 25},
                                                             {'id': 26, 'code': '    {', 'type': 'others',
                                                              'lineNum': 26},
                                                             {'id': 27, 'code': '        printf("INF");',
                                                              'type': 'funCall', 'lineNum': 27},
                                                             {'id': 28, 'code': '    }', 'type': 'others',
                                                              'lineNum': 28}, {'id': 29, 'code': '    return 0;',
                                                                               'type': 'ReturnStatement',
                                                                               'lineNum': 29},
                                                             {'id': 30, 'code': '}', 'type': 'others', 'lineNum': 30}]},
    {'id': 18, 'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270220_correct.c',
     'result': [0, 0, 0, 0, 0, 0], 'errLines': [], 'lineId': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                              {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                               'lineNum': 14},
                                                              {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                              {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                               'lineNum': 16},
                                                              {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                              {'id': 18, 'code': '    float a1,b1,a2,b2,p,q,t,r,s;',
                                                               'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                              {'id': 19,
                                                               'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                               'type': 'funCall', 'lineNum': 19},
                                                              {'id': 20, 'code': '    p=a1*b2 - a2*b1;',
                                                               'type': 'StatementExpression', 'lineNum': 20},
                                                              {'id': 21, 'code': '    q=b2 - b1;',
                                                               'type': 'StatementExpression', 'lineNum': 21},
                                                              {'id': 22, 'code': '    t=a1 - a2;',
                                                               'type': 'StatementExpression', 'lineNum': 22},
                                                              {'id': 23, 'code': '    r=t/p;',
                                                               'type': 'StatementExpression', 'lineNum': 23},
                                                              {'id': 24, 'code': '    s=q/p;',
                                                               'type': 'StatementExpression', 'lineNum': 24},
                                                              {'id': 25, 'code': '    if(p==0)', 'type': 'IfStatement',
                                                               'lineNum': 25},
                                                              {'id': 26, 'code': '    {', 'type': 'others',
                                                               'lineNum': 26},
                                                              {'id': 27, 'code': '        printf("INF");',
                                                               'type': 'funCall', 'lineNum': 27},
                                                              {'id': 28, 'code': '    }', 'type': 'others',
                                                               'lineNum': 28},
                                                              {'id': 29, 'code': '    else', 'type': 'others',
                                                               'lineNum': 29},
                                                              {'id': 30, 'code': '    {', 'type': 'others',
                                                               'lineNum': 30},
                                                              {'id': 31, 'code': '        printf("(%.3f,%.3f)",s,r);',
                                                               'type': 'funCall', 'lineNum': 31},
                                                              {'id': 32, 'code': '    }', 'type': 'others',
                                                               'lineNum': 32}, {'id': 33, 'code': '    return 0;',
                                                                                'type': 'ReturnStatement',
                                                                                'lineNum': 33},
                                                              {'id': 34, 'code': '}', 'type': 'others', 'lineNum': 34}],
     'maxi': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1],
              [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0],
              [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0],
              [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], 'funList': [
        {'pwd': '/home/zhangzhanwen/transtoGraceInput/ITSP-data/2811/270220_correct.c', 'id': 0, 'startLine': 4,
         'endLine': 22, 'name': 'int main()'}], 'codeList': [{'id': 0, 'code': '', 'type': 'others', 'lineNum': 0},
                                                             {'id': 14, 'code': '#include<stdio.h>', 'type': 'others',
                                                              'lineNum': 14},
                                                             {'id': 15, 'code': '', 'type': 'others', 'lineNum': 15},
                                                             {'id': 16, 'code': 'int main()', 'type': 'Method',
                                                              'lineNum': 16},
                                                             {'id': 17, 'code': '{', 'type': 'others', 'lineNum': 17},
                                                             {'id': 18, 'code': '    float a1,b1,a2,b2,p,q,t,r,s;',
                                                              'type': 'LocalVariableDeclaration', 'lineNum': 18},
                                                             {'id': 19,
                                                              'code': '    scanf("%f%f%f%f",&a1,&b1,&a2,&b2);',
                                                              'type': 'funCall', 'lineNum': 19},
                                                             {'id': 20, 'code': '    p=a1*b2 - a2*b1;',
                                                              'type': 'StatementExpression', 'lineNum': 20},
                                                             {'id': 21, 'code': '    q=b2 - b1;',
                                                              'type': 'StatementExpression', 'lineNum': 21},
                                                             {'id': 22, 'code': '    t=a1 - a2;',
                                                              'type': 'StatementExpression', 'lineNum': 22},
                                                             {'id': 23, 'code': '    r=t/p;',
                                                              'type': 'StatementExpression', 'lineNum': 23},
                                                             {'id': 24, 'code': '    s=q/p;',
                                                              'type': 'StatementExpression', 'lineNum': 24},
                                                             {'id': 25, 'code': '    if(p==0)', 'type': 'IfStatement',
                                                              'lineNum': 25},
                                                             {'id': 26, 'code': '    {', 'type': 'others',
                                                              'lineNum': 26},
                                                             {'id': 27, 'code': '        printf("INF");',
                                                              'type': 'funCall', 'lineNum': 27},
                                                             {'id': 28, 'code': '    }', 'type': 'others',
                                                              'lineNum': 28},
                                                             {'id': 29, 'code': '    else', 'type': 'others',
                                                              'lineNum': 29},
                                                             {'id': 30, 'code': '    {', 'type': 'others',
                                                              'lineNum': 30},
                                                             {'id': 31, 'code': '        printf("(%.3f,%.3f)",s,r);',
                                                              'type': 'funCall', 'lineNum': 31},
                                                             {'id': 32, 'code': '    }', 'type': 'others',
                                                              'lineNum': 32}, {'id': 33, 'code': '    return 0;',
                                                                               'type': 'ReturnStatement',
                                                                               'lineNum': 33},
                                                             {'id': 34, 'code': '}', 'type': 'others',
                                                              'lineNum': 34}]}],
 'inList': ['2811.1.in', '2811.2.in', '2811.3.in', '2811.4.in', '2811.5.in', '2811.6.in'],
 'fileId': ['270138_buggy.c', '270150_buggy.c', '270151_buggy.c', '270162_buggy.c', '270168_buggy.c', '270194_buggy.c',
            '270201_buggy.c', '270211_buggy.c', '270220_buggy.c', '270138_correct.c', '270142_correct.c',
            '270150_correct.c', '270151_correct.c', '270162_correct.c', '270168_correct.c', '270194_correct.c',
            '270201_correct.c', '270211_correct.c', '270220_correct.c']}
